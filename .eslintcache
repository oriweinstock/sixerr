[{"C:\\dev\\finalSprint\\sixerr\\src\\index.js":"1","C:\\dev\\finalSprint\\sixerr\\src\\App.jsx":"2","C:\\dev\\finalSprint\\sixerr\\src\\store\\store.js":"3","C:\\dev\\finalSprint\\sixerr\\src\\reportWebVitals.js":"4","C:\\dev\\finalSprint\\sixerr\\src\\serviceWorkerRegistration.js":"5","C:\\dev\\finalSprint\\sixerr\\src\\store\\reducers\\gigReducer.js":"6","C:\\dev\\finalSprint\\sixerr\\src\\routes.js":"7","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\AppHeader.jsx":"8","C:\\dev\\finalSprint\\sixerr\\src\\pages\\GigDetails.jsx":"9","C:\\dev\\finalSprint\\sixerr\\src\\pages\\SixerrApp.jsx":"10","C:\\dev\\finalSprint\\sixerr\\src\\pages\\GigEdit.jsx":"11","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\PackageList.jsx":"12","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigList.jsx":"13","C:\\dev\\finalSprint\\sixerr\\src\\services\\gigService.js":"14","C:\\dev\\finalSprint\\sixerr\\src\\store\\actions\\gigActions.js":"15","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SellerPreview.jsx":"16","C:\\dev\\finalSprint\\sixerr\\src\\services\\httpService.js":"17","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\PackagePreview.jsx":"18","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigPreview.jsx":"19","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigReview.jsx":"20"},{"size":1073,"mtime":1610561408555,"results":"21","hashOfConfig":"22"},{"size":544,"mtime":1610612592142,"results":"23","hashOfConfig":"22"},{"size":544,"mtime":1610564147417,"results":"24","hashOfConfig":"22"},{"size":377,"mtime":1610547361095,"results":"25","hashOfConfig":"22"},{"size":5201,"mtime":1610547361097,"results":"26","hashOfConfig":"22"},{"size":827,"mtime":1610561408565,"results":"27","hashOfConfig":"22"},{"size":534,"mtime":1610562616273,"results":"28","hashOfConfig":"22"},{"size":1586,"mtime":1610612592147,"results":"29","hashOfConfig":"22"},{"size":4752,"mtime":1610618701712,"results":"30","hashOfConfig":"22"},{"size":1060,"mtime":1610612592151,"results":"31","hashOfConfig":"22"},{"size":3071,"mtime":1610577294753,"results":"32","hashOfConfig":"22"},{"size":340,"mtime":1610613489414,"results":"33","hashOfConfig":"22"},{"size":360,"mtime":1610612592149,"results":"34","hashOfConfig":"22"},{"size":770,"mtime":1610564258615,"results":"35","hashOfConfig":"22"},{"size":1415,"mtime":1610568625081,"results":"36","hashOfConfig":"22"},{"size":910,"mtime":1610553742021,"results":"37","hashOfConfig":"22"},{"size":1077,"mtime":1610561408561,"results":"38","hashOfConfig":"22"},{"size":1767,"mtime":1610613505064,"results":"39","hashOfConfig":"22"},{"size":486,"mtime":1610612592150,"results":"40","hashOfConfig":"22"},{"size":997,"mtime":1610618936441,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1xwmuwb",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\dev\\finalSprint\\sixerr\\src\\index.js",[],["87","88"],"C:\\dev\\finalSprint\\sixerr\\src\\App.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\store.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\reportWebVitals.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\serviceWorkerRegistration.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\reducers\\gigReducer.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\routes.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\AppHeader.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\pages\\GigDetails.jsx",["89","90","91","92","93"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GigReview } from '../cmps/GigReview.jsx'\r\nimport { PackageList } from '../cmps/PackageList.jsx'\r\nimport { SellerPreview } from '../cmps/SellerPreview'\r\n// import { Link } from 'react-router-dom'\r\n// import { gigService } from '../services/gigService'\r\nimport { addGig, loadGig } from '../store/actions/gigActions'\r\n// import { loadReviews, addReview } from '../store/actions/reviewActions'\r\n\r\nclass _GigDetails extends React.Component {\r\n\r\n    state = {\r\n        gig: null,\r\n        isGigOwner: true,\r\n        isTitleEditble: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const gigId = this.props.match.params.gigId\r\n        const gig = await loadGig(gigId)\r\n        this.setState({ gig })\r\n\r\n    }\r\n\r\n    handleChange = (ev, field) => {\r\n        console.log(\"field\", field)\r\n        const value = ev.target.innerText\r\n        console.log(\"value\", value)\r\n        this.setState(prevState => {\r\n            return {\r\n                gig: {\r\n                    ...prevState.gig,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isGigOwner } = this.state\r\n        const { gig } = this.state\r\n        console.log(\"render , gig\", gig)\r\n        // console.log(\"render , reviews\", reviews)\r\n        if (!gig) return <div>No gig...</div>\r\n        return (\r\n            <section className=\"gig-details main-layout\">\r\n                <div onInput={(ev) => this.handleChange(ev, 'title')}>\r\n                    <h1 contentEditable suppressContentEditableWarning={`${isGigOwner}`}>{gig.title}</h1>\r\n                </div>\r\n                <div className=\"img-details-conatiner\">\r\n                    <img src={gig.imgUrls[0]} />\r\n                </div>\r\n                <div className=\"short-review flex\">\r\n                    <div className=\"owner-img-container\">\r\n                        <img src={gig.reviews[0].seller.imgUrl} />\r\n                    </div>\r\n                    <div>\r\n                        <h5>{gig.owner.fullname}</h5>\r\n                        <p>{gig.reviews[0].txt}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"desc\">\r\n                    <h2>About This Gig</h2>\r\n                    <h4>{gig.desc}</h4>\r\n                </div>\r\n\r\n                {/* packagesList */}\r\n                <GigReview gig={gig} />\r\n                <SellerPreview seller={gig.owner} />\r\n                <PackageList packages={gig.packages} />\r\n                {/* sellerPreview */}\r\n                {/* reviews */}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        gigs: state.gigModule.gigs,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addGig,\r\n}\r\n\r\nexport const GigDetails = connect(mapStateToProps, mapDispatchToProps)(_GigDetails)\r\n\r\n\r\n//with input\r\n{/* {isTitleEditble || isGigOwner && <h1>{gig.title} {isGigOwner && <button onClick={() => this.makeEditable()}>Edit</button>}</h1>}\r\n                {isTitleEditble && <form action=\"\"> */}\r\n{/* <input className=\"title-input\" type=\"text\" /> */ }\r\n{/* </form>} */ }\r\n\r\n\r\n\r\n// {/* <div key={idx} className={`${todo.isDone && 'todo-done'} flex space-between`} onInput={(ev) => { onNoteChosen(ev, idx) }}>\r\n//                     <p contentEditable suppressContentEditableWarning={true}>{todo.text}</p>\r\n//                     <img className={`${!todo.isDone && 'my-active'} pointer`} onClick={() => { onTodoDone(idx) }} src=\"apps/Keep/assets/img/V.png\" />\r\n//                 </div> */}\r\n\r\n\r\n\r\n                // onUpdateNote = (ev, noteId, todoIdx) => {\r\n                //     if (!ev) return\r\n                //     const text = ev.target.innerText\r\n                //     noteService.getNoteById(noteId)\r\n                //         .then(noteToEdit => {\r\n                //             switch (noteToEdit.type) {\r\n                //                 case 'noteText':\r\n                //                     noteToEdit.info.text = text;\r\n                //                     noteService.save(noteToEdit)\r\n                //                     break\r\n                //                 case 'noteTodos':\r\n                //                     noteToEdit.info.todos[todoIdx].text = text;\r\n                //                     noteService.save(noteToEdit)\r\n                //                     break;\r\n                //                 case 'noteImg':\r\n                //                 case 'noteVideo':\r\n                //                     noteToEdit.info.title = text;\r\n                //                     noteService.save(noteToEdit)\r\n                //             }\r\n                //         })\r\n                // }\r\n","C:\\dev\\finalSprint\\sixerr\\src\\pages\\SixerrApp.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\pages\\GigEdit.jsx",["94","95","96"],"import { loadGigs, addGig } from '../store/actions/gigActions.js';\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { gigService } from '../services/gigService.js'\r\n\r\n\r\nclass _GigEdit extends Component {\r\n\r\n    state = {\r\n        gig: {\r\n            title: '',\r\n            desc: '',\r\n            // package: '',\r\n            tags: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('hey');\r\n        const gigId = this.props.match.params.gigId\r\n        console.log(\"componentDidMount , gigId\", gigId)\r\n        if (gigId) {\r\n            gigService.getById(gigId).then((gig) => {\r\n                console.log(\"gigService.getById , gig\", gig)\r\n                this.setState({ gig })\r\n            })\r\n        }\r\n    }\r\n    onSavedGig = (ev) => {\r\n        console.log('on saved gig func :)');\r\n        ev.preventDefault()\r\n        const { gig } = this.state\r\n        this.props.addGig(gig).then(() => {\r\n            console.log('one line before history');\r\n            this.props.history.push('/gig');\r\n        })\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const field = target.name\r\n        console.log(\"field\", field)\r\n        const value = target.value\r\n        console.log(\"value\", value)\r\n        this.setState(prevState => {\r\n            return {\r\n                gig: {\r\n                    ...prevState.gig,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { gig } = this.state\r\n        console.log(\"render , gig\", gig)\r\n        return (\r\n            <form onSubmit={this.onSavedGig} className=\"flex column justify-center\">\r\n                <h4>Edit Title</h4>\r\n                <textarea name=\"title\" autoFocus rows=\"3\" cols=\"60\" value={gig.title} type=\"text\" placeholder=\"Enter Gig Title...\" value={gig.title} onChange={this.handleInput} required autoComplete=\"off\" />\r\n                <h4>Edit Desc</h4>\r\n                <textarea name=\"desc\" autoFocus rows=\"3\" cols=\"60\" value={gig.title} type=\"text\" placeholder=\"Enter Gig Desc...\" value={gig.desc} onChange={this.handleInput} required autoComplete=\"off\" />\r\n                <select onChange={this.handleInput} name=\"tags\" required>\r\n                    <option value=\"graphic design\">graphic design </option>\r\n                    <option value=\"minimalist\">minimalist</option>\r\n                    <option value=\"flat\">flat</option>\r\n                    <option value=\"modern\">modern</option>\r\n                    <option value=\"book\">book</option>\r\n                    <option value=\"logo design\">logo design</option>\r\n                    <option value=\"cover\">cover</option>\r\n                </select>\r\n                <div>\r\n                    <button>Save</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        gigs: state.gigModule.gigs,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addGig,\r\n}\r\n\r\nexport const GigEdit = connect(mapStateToProps, mapDispatchToProps)(_GigEdit)","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\PackageList.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigList.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\services\\gigService.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\actions\\gigActions.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SellerPreview.jsx",["97"],"\r\nexport function SellerPreview({ seller }) {\r\n    console.log(\"SellerPreview , seller\", seller)\r\n    return (\r\n        <section className=\"about-seller-container flex column\">\r\n            <h2>About The Seller</h2>\r\n            <div className=\"flex\">\r\n                <div className=\"seller-img-container\">\r\n                    <img src={seller.imgUrl} />\r\n                </div>\r\n                <div className=\"flex column\">\r\n                    <p>{seller.fullname}</p>\r\n                    <p>Creator of AR filters</p>\r\n                    <p>Rate *****</p>\r\n                    <button>Contact Me</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex column\">\r\n                {/* <div className=\"flex space-between\">\r\n                    <p>From</p>\r\n                    <p>Member since</p>\r\n                </div> */}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","C:\\dev\\finalSprint\\sixerr\\src\\services\\httpService.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\PackagePreview.jsx",["98"],"import React from 'react'\r\n\r\nexport function PackagePreview({ pack }) {\r\n    console.log(\"PackagePreview , package\", pack)\r\n    return (\r\n        <>\r\n        <div>Package Preview</div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n{/* <div key={idx} className={`${todo.isDone && 'todo-done'} flex space-between`} onInput={(ev) => { onNoteChosen(ev, idx) }}>\r\n                    <p contentEditable suppressContentEditableWarning={true}>{todo.text}</p>\r\n                    <img className={`${!todo.isDone && 'my-active'} pointer`} onClick={() => { onTodoDone(idx) }} src=\"apps/Keep/assets/img/V.png\" />\r\n                </div> */}\r\n\r\n\r\n\r\n                // onUpdateNote = (ev, noteId, todoIdx) => {\r\n                //     if (!ev) return\r\n                //     const text = ev.target.innerText\r\n                //     noteService.getNoteById(noteId)\r\n                //         .then(noteToEdit => {\r\n                //             switch (noteToEdit.type) {\r\n                //                 case 'noteText':\r\n                //                     noteToEdit.info.text = text;\r\n                //                     noteService.save(noteToEdit)\r\n                //                     break\r\n                //                 case 'noteTodos':\r\n                //                     noteToEdit.info.todos[todoIdx].text = text;\r\n                //                     noteService.save(noteToEdit)\r\n                //                     break;\r\n                //                 case 'noteImg':\r\n                //                 case 'noteVideo':\r\n                //                     noteToEdit.info.title = text;\r\n                //                     noteService.save(noteToEdit)\r\n                //             }\r\n                //         })\r\n                // }\r\n","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigPreview.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigReview.jsx",["99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":53,"column":21,"nodeType":"106","endLine":53,"endColumn":49},{"ruleId":"104","severity":1,"message":"105","line":57,"column":25,"nodeType":"106","endLine":57,"endColumn":67},{"ruleId":"107","severity":1,"message":"108","line":94,"column":1,"nodeType":"109","messageId":"110","endLine":95,"endColumn":56},{"ruleId":"107","severity":1,"message":"108","line":96,"column":1,"nodeType":"109","messageId":"110","endLine":96,"endColumn":55},{"ruleId":"107","severity":1,"message":"108","line":97,"column":1,"nodeType":"109","messageId":"110","endLine":97,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":1,"column":10,"nodeType":"113","messageId":"114","endLine":1,"endColumn":18},{"ruleId":"115","severity":1,"message":"116","line":60,"column":132,"nodeType":"117","endLine":60,"endColumn":149},{"ruleId":"115","severity":1,"message":"116","line":62,"column":130,"nodeType":"117","endLine":62,"endColumn":146},{"ruleId":"104","severity":1,"message":"105","line":9,"column":21,"nodeType":"106","endLine":9,"endColumn":48},{"ruleId":"107","severity":1,"message":"108","line":13,"column":1,"nodeType":"109","messageId":"110","endLine":16,"endColumn":27},{"ruleId":"111","severity":1,"message":"118","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":17},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'loadGigs' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'connect' is defined but never used.","no-global-assign","no-unsafe-negation"]