[{"C:\\dev\\finalSprint\\sixerr\\src\\index.js":"1","C:\\dev\\finalSprint\\sixerr\\src\\App.jsx":"2","C:\\dev\\finalSprint\\sixerr\\src\\store\\store.js":"3","C:\\dev\\finalSprint\\sixerr\\src\\serviceWorkerRegistration.js":"4","C:\\dev\\finalSprint\\sixerr\\src\\reportWebVitals.js":"5","C:\\dev\\finalSprint\\sixerr\\src\\store\\reducers\\gigReducer.js":"6","C:\\dev\\finalSprint\\sixerr\\src\\store\\reducers\\userReducer.js":"7","C:\\dev\\finalSprint\\sixerr\\src\\routes.js":"8","C:\\dev\\finalSprint\\sixerr\\src\\pages\\GigEdit.jsx":"9","C:\\dev\\finalSprint\\sixerr\\src\\pages\\SixerrApp.jsx":"10","C:\\dev\\finalSprint\\sixerr\\src\\pages\\GigDetails.jsx":"11","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\AppHeader.jsx":"12","C:\\dev\\finalSprint\\sixerr\\src\\pages\\Login.jsx":"13","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigList.jsx":"14","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\PackageList.jsx":"15","C:\\dev\\finalSprint\\sixerr\\src\\store\\actions\\gigActions.js":"16","C:\\dev\\finalSprint\\sixerr\\src\\services\\gigService.js":"17","C:\\dev\\finalSprint\\sixerr\\src\\store\\actions\\userActions.js":"18","C:\\dev\\finalSprint\\sixerr\\src\\services\\utilService.js":"19","C:\\dev\\finalSprint\\sixerr\\src\\services\\userService.js":"20","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SellerPreview.jsx":"21","C:\\dev\\finalSprint\\sixerr\\src\\services\\httpService.js":"22","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\PackagePreview.jsx":"23","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigPreview.jsx":"24","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SideBar.jsx":"25","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigAddReview.jsx":"26","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ReviewList.jsx":"27","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ReviewPreview.jsx":"28"},{"size":1073,"mtime":1610561408555,"results":"29","hashOfConfig":"30"},{"size":544,"mtime":1610612592142,"results":"31","hashOfConfig":"30"},{"size":568,"mtime":1610618978672,"results":"32","hashOfConfig":"30"},{"size":5201,"mtime":1610547361097,"results":"33","hashOfConfig":"30"},{"size":377,"mtime":1610547361095,"results":"34","hashOfConfig":"30"},{"size":827,"mtime":1610561408565,"results":"35","hashOfConfig":"30"},{"size":479,"mtime":1610618978671,"results":"36","hashOfConfig":"30"},{"size":580,"mtime":1610618978667,"results":"37","hashOfConfig":"30"},{"size":3071,"mtime":1610577294753,"results":"38","hashOfConfig":"30"},{"size":1060,"mtime":1610612592151,"results":"39","hashOfConfig":"30"},{"size":7948,"mtime":1610647554413,"results":"40","hashOfConfig":"30"},{"size":1896,"mtime":1610628528583,"results":"41","hashOfConfig":"30"},{"size":5754,"mtime":1610628528586,"results":"42","hashOfConfig":"30"},{"size":266,"mtime":1610638831177,"results":"43","hashOfConfig":"30"},{"size":340,"mtime":1610613489414,"results":"44","hashOfConfig":"30"},{"size":1415,"mtime":1610568625081,"results":"45","hashOfConfig":"30"},{"size":770,"mtime":1610564258615,"results":"46","hashOfConfig":"30"},{"size":1804,"mtime":1610618978670,"results":"47","hashOfConfig":"30"},{"size":681,"mtime":1610561408563,"results":"48","hashOfConfig":"30"},{"size":2224,"mtime":1610618978668,"results":"49","hashOfConfig":"30"},{"size":910,"mtime":1610553742021,"results":"50","hashOfConfig":"30"},{"size":1077,"mtime":1610561408561,"results":"51","hashOfConfig":"30"},{"size":1767,"mtime":1610613505064,"results":"52","hashOfConfig":"30"},{"size":486,"mtime":1610612592150,"results":"53","hashOfConfig":"30"},{"size":1842,"mtime":1610638027360,"results":"54","hashOfConfig":"30"},{"size":2572,"mtime":1610638917124,"results":"55","hashOfConfig":"30"},{"size":467,"mtime":1610639702681,"results":"56","hashOfConfig":"30"},{"size":855,"mtime":1610640826310,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1xwmuwb",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\finalSprint\\sixerr\\src\\index.js",[],["120","121"],"C:\\dev\\finalSprint\\sixerr\\src\\App.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\store.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\serviceWorkerRegistration.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\reportWebVitals.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\reducers\\gigReducer.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\reducers\\userReducer.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\routes.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\pages\\GigEdit.jsx",["122","123","124"],"import { loadGigs, addGig } from '../store/actions/gigActions.js';\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { gigService } from '../services/gigService.js'\r\n\r\n\r\nclass _GigEdit extends Component {\r\n\r\n    state = {\r\n        gig: {\r\n            title: '',\r\n            desc: '',\r\n            // package: '',\r\n            tags: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('hey');\r\n        const gigId = this.props.match.params.gigId\r\n        console.log(\"componentDidMount , gigId\", gigId)\r\n        if (gigId) {\r\n            gigService.getById(gigId).then((gig) => {\r\n                console.log(\"gigService.getById , gig\", gig)\r\n                this.setState({ gig })\r\n            })\r\n        }\r\n    }\r\n    onSavedGig = (ev) => {\r\n        console.log('on saved gig func :)');\r\n        ev.preventDefault()\r\n        const { gig } = this.state\r\n        this.props.addGig(gig).then(() => {\r\n            console.log('one line before history');\r\n            this.props.history.push('/gig');\r\n        })\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const field = target.name\r\n        console.log(\"field\", field)\r\n        const value = target.value\r\n        console.log(\"value\", value)\r\n        this.setState(prevState => {\r\n            return {\r\n                gig: {\r\n                    ...prevState.gig,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { gig } = this.state\r\n        console.log(\"render , gig\", gig)\r\n        return (\r\n            <form onSubmit={this.onSavedGig} className=\"flex column justify-center\">\r\n                <h4>Edit Title</h4>\r\n                <textarea name=\"title\" autoFocus rows=\"3\" cols=\"60\" value={gig.title} type=\"text\" placeholder=\"Enter Gig Title...\" value={gig.title} onChange={this.handleInput} required autoComplete=\"off\" />\r\n                <h4>Edit Desc</h4>\r\n                <textarea name=\"desc\" autoFocus rows=\"3\" cols=\"60\" value={gig.title} type=\"text\" placeholder=\"Enter Gig Desc...\" value={gig.desc} onChange={this.handleInput} required autoComplete=\"off\" />\r\n                <select onChange={this.handleInput} name=\"tags\" required>\r\n                    <option value=\"graphic design\">graphic design </option>\r\n                    <option value=\"minimalist\">minimalist</option>\r\n                    <option value=\"flat\">flat</option>\r\n                    <option value=\"modern\">modern</option>\r\n                    <option value=\"book\">book</option>\r\n                    <option value=\"logo design\">logo design</option>\r\n                    <option value=\"cover\">cover</option>\r\n                </select>\r\n                <div>\r\n                    <button>Save</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        gigs: state.gigModule.gigs,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addGig,\r\n}\r\n\r\nexport const GigEdit = connect(mapStateToProps, mapDispatchToProps)(_GigEdit)","C:\\dev\\finalSprint\\sixerr\\src\\pages\\SixerrApp.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\pages\\GigDetails.jsx",["125","126","127","128","129","130"],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\AppHeader.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\pages\\Login.jsx",["131"],"import { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { login, logout, addUser } from \"../store/actions/userActions.js\"\r\n\r\nclass _Login extends Component {\r\n\r\n    state = {\r\n        msg: '',\r\n        loginCred: {\r\n            username: '',\r\n            password: ''\r\n        },\r\n        signupCred: {\r\n            username: '',\r\n            password: '',\r\n            fullname: ''\r\n        }\r\n    }\r\n\r\n    // componentDidMount () {\r\n\r\n    // }\r\n\r\n    loginHandleChange = ev => {\r\n        const { name, value } = ev.target\r\n        this.setState(prevState => ({\r\n            loginCred: {\r\n                ...prevState.loginCred,\r\n                [name]: value\r\n            }\r\n        }))\r\n    }\r\n\r\n    signupHandleChange = ev => {\r\n        const { name, value } = ev.target\r\n        this.setState(prevState => ({\r\n            signupCred: {\r\n                ...prevState.signupCred,\r\n                [name]: value\r\n            }\r\n        }))\r\n    }\r\n\r\n    doLogin = async ev => {\r\n        ev.preventDefault()\r\n        const userCreds = this.state.loginCred\r\n        if (!userCreds.username || !userCreds.password) {\r\n            return this.setState({ loginCred: { username: '', password: '' }, msg: 'Please enter user/password' })\r\n        }\r\n        try {\r\n            await this.props.login(userCreds)\r\n            this.setState(\r\n                {\r\n                    loginCred: { username: '', password: '' },\r\n                }, () => { this.props.history.push('/gig') })\r\n\r\n        }\r\n        catch (err) {\r\n            console.log('ERR', err)\r\n            this.setState(prevState => ({\r\n                loginCred: {\r\n                    ...prevState.loginCred,\r\n                    password: ''\r\n                },\r\n                msg: 'Wrong username or password, please try again'\r\n            }))\r\n        }\r\n    }\r\n\r\n    doLogout = () => {\r\n        this.props.logout()\r\n    }\r\n\r\n    doSignup = async ev => {\r\n        ev.preventDefault()\r\n        const { username, password, fullname } = this.state.signupCred\r\n        if (!username || !password || !fullname) {\r\n            return this.setState({ msg: 'All inputs are required' })\r\n        }\r\n        try {\r\n            await this.props.addUser({ username, password, fullname })\r\n            this.setState(\r\n                {\r\n                    signupCred: { username: '', password: '', fullname: '' },\r\n                }, () => { this.props.history.push('/gig') })\r\n        }\r\n        catch (err) {\r\n            console.log('ERR', err)\r\n            this.setState(prevState => ({\r\n                signupCred: {\r\n                    ...prevState.signupCred,\r\n                    password: ''\r\n                },\r\n                msg: 'Could not sign up please try again'\r\n            }))\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const loggedInUser = this.props.user //TODO pay attention later \r\n        console.log(loggedInUser)\r\n\r\n        let signupSection = (\r\n            <form className=\"frm\" onSubmit={this.doSignup}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"fullname\"\r\n                    value={this.state.signupCred.fullname}\r\n                    onChange={this.signupHandleChange}\r\n                    placeholder=\"Full name\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={this.state.signupCred.password}\r\n                    onChange={this.signupHandleChange}\r\n                    placeholder=\"Password\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={this.state.signupCred.username}\r\n                    onChange={this.signupHandleChange}\r\n                    placeholder=\"Username\"\r\n                />\r\n                <br />\r\n                <button>Signup</button>\r\n            </form>\r\n        )\r\n        let loginSection = (\r\n            <form className=\"frm\" onSubmit={this.doLogin}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={this.state.loginCred.username}\r\n                    onChange={this.loginHandleChange}\r\n                    placeholder=\"Username\"\r\n                />\r\n                <br />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.loginCred.password}\r\n                    onChange={this.loginHandleChange}\r\n                    placeholder=\"Password\"\r\n                />\r\n                <br />\r\n                <button className=\"rounded\">Continue</button>\r\n                <hr/>\r\n                <h4>Not a member yet? <span>Join now</span></h4>\r\n            </form>\r\n        )\r\n\r\n\r\n        return (\r\n            <div className=\"login main-layout shadow rounded\">\r\n                <h1>\r\n                    Sign In to Sixerr\r\n                </h1>\r\n                <p>{this.state.msg}</p>\r\n                {loggedInUser && (\r\n                    <div>\r\n                        <h3>\r\n                            Welcome {loggedInUser.fullname}\r\n                            <button onClick={this.doLogout}>Logout</button>\r\n                        </h3>\r\n                    </div>\r\n                )}\r\n                {!loggedInUser && loginSection}\r\n                {/* {!loggedInUser && signupSection} */}\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    logout,\r\n    addUser,\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)\r\n\r\n\r\n\r\n\r\n","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigList.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\PackageList.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\actions\\gigActions.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\services\\gigService.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\actions\\userActions.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\services\\utilService.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\services\\userService.js",["132"],"// import { storageService } from './asyncStorageService'\r\nimport { httpService } from './httpService'\r\nconst SCORE_FOR_REVIEW = 10\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser,\r\n}\r\n\r\nwindow.userService = userService\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    // return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    const users = await httpService.get('user')\r\n    const user = users.find(user => user.username === userCred.username && user.password === userCred.password)\r\n    if (user) {\r\n        console.log('Found user')\r\n        return _saveLocalUser(user)\r\n    }\r\n    else throw new Error('no user')\r\n    // const user = await httpService.post('auth/login', userCred)\r\n    // if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    const user = await httpService.post('user', userCred)\r\n    // const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return\r\n    // return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\n","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SellerPreview.jsx",["133"],"\r\nexport function SellerPreview({ seller }) {\r\n    console.log(\"SellerPreview , seller\", seller)\r\n    return (\r\n        <section className=\"about-seller-container flex column\">\r\n            <h2>About The Seller</h2>\r\n            <div className=\"flex\">\r\n                <div className=\"seller-img-container\">\r\n                    <img src={seller.imgUrl} />\r\n                </div>\r\n                <div className=\"flex column\">\r\n                    <p>{seller.fullname}</p>\r\n                    <p>Creator of AR filters</p>\r\n                    <p>Rate *****</p>\r\n                    <button>Contact Me</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex column\">\r\n                {/* <div className=\"flex space-between\">\r\n                    <p>From</p>\r\n                    <p>Member since</p>\r\n                </div> */}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","C:\\dev\\finalSprint\\sixerr\\src\\services\\httpService.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\PackagePreview.jsx",["134"],"import React from 'react'\r\n\r\nexport function PackagePreview({ pack }) {\r\n    console.log(\"PackagePreview , package\", pack)\r\n    return (\r\n        <>\r\n        <div>Package Preview</div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n{/* <div key={idx} className={`${todo.isDone && 'todo-done'} flex space-between`} onInput={(ev) => { onNoteChosen(ev, idx) }}>\r\n                    <p contentEditable suppressContentEditableWarning={true}>{todo.text}</p>\r\n                    <img className={`${!todo.isDone && 'my-active'} pointer`} onClick={() => { onTodoDone(idx) }} src=\"apps/Keep/assets/img/V.png\" />\r\n                </div> */}\r\n\r\n\r\n\r\n                // onUpdateNote = (ev, noteId, todoIdx) => {\r\n                //     if (!ev) return\r\n                //     const text = ev.target.innerText\r\n                //     noteService.getNoteById(noteId)\r\n                //         .then(noteToEdit => {\r\n                //             switch (noteToEdit.type) {\r\n                //                 case 'noteText':\r\n                //                     noteToEdit.info.text = text;\r\n                //                     noteService.save(noteToEdit)\r\n                //                     break\r\n                //                 case 'noteTodos':\r\n                //                     noteToEdit.info.todos[todoIdx].text = text;\r\n                //                     noteService.save(noteToEdit)\r\n                //                     break;\r\n                //                 case 'noteImg':\r\n                //                 case 'noteVideo':\r\n                //                     noteToEdit.info.title = text;\r\n                //                     noteService.save(noteToEdit)\r\n                //             }\r\n                //         })\r\n                // }\r\n","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigPreview.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SideBar.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigAddReview.jsx",["135","136","137"],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ReviewList.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ReviewPreview.jsx",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":10,"nodeType":"144","messageId":"145","endLine":1,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":60,"column":132,"nodeType":"148","endLine":60,"endColumn":149},{"ruleId":"146","severity":1,"message":"147","line":62,"column":130,"nodeType":"148","endLine":62,"endColumn":146},{"ruleId":"149","severity":1,"message":"150","line":106,"column":25,"nodeType":"151","endLine":106,"endColumn":65},{"ruleId":"149","severity":1,"message":"150","line":113,"column":33,"nodeType":"151","endLine":113,"endColumn":53},{"ruleId":"149","severity":1,"message":"150","line":119,"column":29,"nodeType":"151","endLine":119,"endColumn":71},{"ruleId":"152","severity":1,"message":"153","line":161,"column":1,"nodeType":"154","messageId":"155","endLine":162,"endColumn":56},{"ruleId":"152","severity":1,"message":"153","line":163,"column":1,"nodeType":"154","messageId":"155","endLine":163,"endColumn":55},{"ruleId":"152","severity":1,"message":"153","line":164,"column":1,"nodeType":"154","messageId":"155","endLine":164,"endColumn":18},{"ruleId":"142","severity":1,"message":"156","line":105,"column":13,"nodeType":"144","messageId":"145","endLine":105,"endColumn":26},{"ruleId":"142","severity":1,"message":"157","line":3,"column":7,"nodeType":"144","messageId":"145","endLine":3,"endColumn":23},{"ruleId":"149","severity":1,"message":"150","line":9,"column":21,"nodeType":"151","endLine":9,"endColumn":48},{"ruleId":"152","severity":1,"message":"153","line":13,"column":1,"nodeType":"154","messageId":"155","endLine":16,"endColumn":27},{"ruleId":"142","severity":1,"message":"158","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":17},{"ruleId":"142","severity":1,"message":"159","line":54,"column":17,"nodeType":"144","messageId":"145","endLine":54,"endColumn":21},{"ruleId":"142","severity":1,"message":"160","line":55,"column":17,"nodeType":"144","messageId":"145","endLine":55,"endColumn":20},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'loadGigs' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'signupSection' is assigned a value but never used.","'SCORE_FOR_REVIEW' is assigned a value but never used.","'connect' is defined but never used.","'user' is assigned a value but never used.","'gig' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]