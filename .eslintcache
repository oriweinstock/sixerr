[{"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/index.js":"1","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/App.jsx":"2","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/serviceWorkerRegistration.js":"3","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/reportWebVitals.js":"4","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/store/store.js":"5","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/store/reducers/gigReducer.js":"6","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/routes.js":"7","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/store/reducers/userReducer.js":"8","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/AppHeader.jsx":"9","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/pages/SixerrApp.jsx":"10","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/pages/GigDetails.jsx":"11","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/pages/Login.jsx":"12","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/pages/GigEdit.jsx":"13","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/GigList.jsx":"14","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/PackageList.jsx":"15","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/store/actions/gigActions.js":"16","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/store/actions/userActions.js":"17","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/services/gigService.js":"18","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/SellerPreview.jsx":"19","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/services/userService.js":"20","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/services/httpService.js":"21","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/GigPreview.jsx":"22","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/PackagePreview.jsx":"23","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/services/utilService.js":"24","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/GigAddReview.jsx":"25","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/SideBar.jsx":"26","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/ReviewList.jsx":"27","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/ReviewPreview.jsx":"28","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/Hero.jsx":"29","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/GigImgLightBox.jsx":"30"},{"size":1043,"mtime":1610561589733,"results":"31","hashOfConfig":"32"},{"size":622,"mtime":1610696588449,"results":"33","hashOfConfig":"32"},{"size":5064,"mtime":1610522936778,"results":"34","hashOfConfig":"32"},{"size":364,"mtime":1610522936777,"results":"35","hashOfConfig":"32"},{"size":553,"mtime":1610622736540,"results":"36","hashOfConfig":"32"},{"size":799,"mtime":1610561589760,"results":"37","hashOfConfig":"32"},{"size":552,"mtime":1610712216345,"results":"38","hashOfConfig":"32"},{"size":462,"mtime":1610622736538,"results":"39","hashOfConfig":"32"},{"size":2263,"mtime":1610712615217,"results":"40","hashOfConfig":"32"},{"size":1054,"mtime":1610632889538,"results":"41","hashOfConfig":"32"},{"size":11917,"mtime":1610709929252,"results":"42","hashOfConfig":"32"},{"size":6309,"mtime":1610657301210,"results":"43","hashOfConfig":"32"},{"size":5896,"mtime":1610709929255,"results":"44","hashOfConfig":"32"},{"size":306,"mtime":1610658593980,"results":"45","hashOfConfig":"32"},{"size":328,"mtime":1610622736535,"results":"46","hashOfConfig":"32"},{"size":1352,"mtime":1610622736538,"results":"47","hashOfConfig":"32"},{"size":1736,"mtime":1610622736538,"results":"48","hashOfConfig":"32"},{"size":739,"mtime":1610622736537,"results":"49","hashOfConfig":"32"},{"size":884,"mtime":1610561589732,"results":"50","hashOfConfig":"32"},{"size":2153,"mtime":1610622736538,"results":"51","hashOfConfig":"32"},{"size":1035,"mtime":1610561589752,"results":"52","hashOfConfig":"32"},{"size":543,"mtime":1610655638298,"results":"53","hashOfConfig":"32"},{"size":1727,"mtime":1610622736536,"results":"54","hashOfConfig":"32"},{"size":655,"mtime":1610561589752,"results":"55","hashOfConfig":"32"},{"size":3253,"mtime":1610709929251,"results":"56","hashOfConfig":"32"},{"size":1801,"mtime":1610657829106,"results":"57","hashOfConfig":"32"},{"size":453,"mtime":1610657829105,"results":"58","hashOfConfig":"32"},{"size":832,"mtime":1610657829105,"results":"59","hashOfConfig":"32"},{"size":3528,"mtime":1610709417389,"results":"60","hashOfConfig":"32"},{"size":1064,"mtime":1610709929251,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"3a93sn",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"64"},"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/index.js",[],["134","135"],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/App.jsx",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/serviceWorkerRegistration.js",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/reportWebVitals.js",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/store/store.js",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/store/reducers/gigReducer.js",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/routes.js",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/store/reducers/userReducer.js",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/AppHeader.jsx",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/pages/SixerrApp.jsx",["136"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { GigList } from '../cmps/GigList.jsx';\nimport { Login } from './Login.jsx'\nimport { loadGigs, setFilter, removeGig } from \"../store/actions/gigActions.js\";\n\n\nclass _SixerrApp extends React.Component {\n\n    componentDidMount() {\n        this.props.loadGigs()\n    }\n\n    onDelete = () => { }\n\n    render() {\n        return (\n            <section className=\"sixerr-app main-layout\">\n                <div className=\"flex space-around align-center mrg-top mrg-bottom\">\n                    {/* <GigFilter /> */}\n                </div>\n                <GigList gigs={this.props.gigs} onDelete={this.onDelete} />\n            </section>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        gigs: state.gigModule.gigs,\n        filterBy: state.gigModule.filterBy\n        // user: state.userModule.user\n    }\n}\n\nconst mapDispatchToProps = {\n    loadGigs,\n    setFilter,\n    removeGig\n}\n\nexport const SixerrApp = connect(mapStateToProps, mapDispatchToProps)(_SixerrApp)\n","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/pages/GigDetails.jsx",["137","138","139","140","141"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { GigAddReview } from '../cmps/GigAddReview.jsx'\nimport { PackageList } from '../cmps/PackageList.jsx'\nimport { SellerPreview } from '../cmps/SellerPreview'\n// import { Link } from 'react-router-dom'\n// import { gigService } from '../services/gigService'\nimport { addGig, loadGig, updateGig } from '../store/actions/gigActions'\nimport Avatar from '@material-ui/core/Avatar';\nimport StarRateIcon from '@material-ui/icons/StarRate';\nimport SideBar from '../cmps/SideBar.jsx'\nimport ReviewList from '../cmps/ReviewList.jsx'\nimport EditIcon from '@material-ui/icons/Edit';\nimport { GigImgLightBox } from '../cmps/GigImgLightBox';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport { gigEdit } from '../pages/GigEdit'\nimport { Link } from 'react-router-dom'\n\n\n// import { loadReviews, addReview } from '../store/actions/reviewActions'\n\nclass _GigDetails extends React.Component {\n\n    state = {\n        gig: null,\n        isGigOwner: true,\n        isTitleEditble: false,\n        isDescEditble: false,\n        numImgChoosen: 0,\n        isLightBoxOpen: false,\n        currImg: \"\",\n    }\n\n    async componentDidMount() {\n        const gigId = this.props.match.params.gigId\n        const gig = await loadGig(gigId)\n        const { numImgChoosen } = this.state\n        const currImg = gig.imgUrls[numImgChoosen]\n        this.setState({ gig, currImg })\n\n\n    }\n\n    handleChange = (ev, field) => {\n        const value = ev.target.innerText\n        this.setState(prevState => {\n            return {\n                gig: {\n                    ...prevState.gig,\n                    [field]: value\n                }\n            }\n        })\n    }\n    onToggleImgLightbox = () => {\n        console.log('toggle img lightBox');\n        const { isLightBoxOpen } = this.state\n        const { numImgChoosen } = this.state\n        const currImg = this.state.gig.imgUrls[numImgChoosen]\n        this.setState({ isLightBoxOpen: !isLightBoxOpen, currImg })\n    }\n\n\n    onEdit = (ev) => {\n        ev.preventDefault()\n        const { isTitleEditble, isDescEditble } = this.state\n        if (isTitleEditble) this.toggleIsTitleEditble(isTitleEditble)\n        if (isDescEditble) this.toggleIsDescEditble(isDescEditble)\n        const { gig } = this.state\n        this.props.addGig(gig).then(() => {\n            console.log('adeed sucessfully');\n        })\n    }\n\n    onChooseImg = (imgIdx) => {\n        // console.log(\"imgIdx\", imgIdx)\n        this.setState({ numImgChoosen: imgIdx })\n    }\n\n    toggleIsTitleEditble = (isTitleEditble) => {\n        isTitleEditble = !isTitleEditble\n        this.setState({ isTitleEditble })\n    }\n\n    toggleIsDescEditble = (isDescEditble) => {\n        isDescEditble = !isDescEditble\n        this.setState({ isDescEditble })\n    }\n    onNextPageLightBox = () => {\n        let { numImgChoosen } = this.state\n        const { gig } = this.state\n        numImgChoosen++\n        if (numImgChoosen === gig.imgUrls.length) numImgChoosen = 0\n        const currImg = gig.imgUrls[numImgChoosen]\n        this.setState({ numImgChoosen, currImg })\n        console.log(\"numImgChoosen\", numImgChoosen)\n    }\n    onPrevPageLightBox = () => {\n        let { numImgChoosen } = this.state\n        const { gig } = this.state\n        numImgChoosen--\n        if (numImgChoosen === -1) numImgChoosen = gig.imgUrls.length - 1\n        const currImg = gig.imgUrls[numImgChoosen]\n        this.setState({ numImgChoosen, currImg })\n        console.log(\"numImgChoosen\", numImgChoosen)\n    }\n    getAvgRate = () => {\n        const { reviews } = this.state.gig\n        const sumRate = reviews.reduce((acc, review) => {\n            return acc += review.rating\n        }, 0)\n        const avg = Math.floor(sumRate / reviews.length)\n        console.log(\"avg\", avg)\n        return avg;\n    }\n\n\n    render() {\n        const { gig, numImgChoosen, isTitleEditble, isGigOwner, isDescEditble, isLightBoxOpen } = this.state\n        console.log(\"render , numImgChoosen\", numImgChoosen)\n        const { user } = this.props\n        const { currImg } = this.state\n        // const starsLength = this.getAvgRate()\n        // console.log(\"render , startLength\", starsLength)\n        if (!gig) return <div>No gig...</div>\n\n        // title, description, package, tags\n\n        return (\n            <>\n                {/* <gigEdit /> */}\n                <Link to='/gig/edit' ><button>Add Gig</button></Link>\n                {isLightBoxOpen && <GigImgLightBox onToggleImgLightbox={this.onToggleImgLightbox} currImg={currImg} onNextPageLightBox={this.onNextPageLightBox} onPrevPageLightBox={this.onPrevPageLightBox} />}\n                <section className=\"gig-details main-layout\">\n                    <div className=\"main-details\">\n                        {/* <div onInput={(ev) => this.handleChange(ev, 'title')}> \n                    <h1 className=\"gig-title\" contentEditable suppressContentEditableWarning={`${isGigOwner}`}>{gig.title}</h1>\n                    </div> */}\n                        <div className=\"flex\">\n                            {isGigOwner && <h1 autofocus className=\"gig-title\" onInput={(ev) => this.handleChange(ev, 'title')} contentEditable={isTitleEditble}>{gig.title}</h1>}\n                            < EditIcon className=\"edit-icon\" onClick={() => this.toggleIsTitleEditble(isTitleEditble)} />\n                        </div>\n                        {isTitleEditble && <button onClick={this.onEdit}>Save</button>}\n                        <div className=\"seller-overview\">\n                            <Avatar alt=\"Remy Sharp\" src=\"https://avataaars.io/?avatarStyle=Circle&topType=LongHairStraight&accessoriesType=Blank&hairColor=BrownDark&facialHairType=Blank&clotheType=BlazerShirt&eyeType=Default&eyebrowType=Default&mouthType=Default&skinColor=Light\" />\n                            <small>{gig.owner.fullname}</small>\n                            <span>|</span>\n                            {/* todo print it multiple times */}\n                            <div className=\"flex\">\n                                {/* {starsLength.map((avg,idx) =>{\n                                return <StarRateIcon key={idx} />\n                                })} */}\n                                <StarRateIcon ></StarRateIcon>\n                            </div>\n                            <span>{this.getAvgRate()}</span>\n                            <span>({gig.reviews.length})</span>\n                            <span>|</span>\n                            {/* get orders from gig */}\n                            <span className=\"order-count\">1 Orders in Queue</span>\n                        </div>\n                        <div className=\"img-details-conatiner\" onClick={() => this.onToggleImgLightbox()}>\n                            <FullscreenIcon className=\"full-screen-icon\" />\n                            {!gig.videoSrc && <video controls >\n                                {/* <source src={gig.videoSrc} /> */}\n                                <source src=\"https://fiverr-res.cloudinary.com/video/upload/t_fiverr_hd/jkj847uw28tkz4ruicat\" />\n                            </video>}\n                            {/* <img src={gig.imgUrls[numImgChoosen]} /> */}\n                        </div>\n                        <div className=\"imgs-gallery-container flex\">\n                            {gig.imgUrls.map((imgUrl, idx) => {\n                                var className = \"img-gallery\"\n                                if (numImgChoosen === idx) className += \" active\"\n                                return <div key={idx} onClick={() => this.onChooseImg(idx)} className={className}>\n                                    <img src={imgUrl} />\n                                </div>\n                            })}\n                        </div>\n                        <h2 className=\"short-review-header\">What people loved about this seller</h2>\n                        <div className=\"short-review flex\">\n                            <div className=\"avatar-container\">\n                                {/* <img src={gig.reviews[0].seller.imgUrl} /> */}\n                                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                            </div>\n                            <div className=\"content\">\n                                <h6>{gig.owner.fullname}</h6>\n                                {/* <p>{gig.reviews[0].txt}</p> */}\n                                <p>On your service has provided great service for me the last 30 days. All posts are in my niche and engagement has increased across all platforms. I will be</p>\n                            </div>\n                        </div>\n                        <div className=\"desc\">\n                            <h2>About This Gig</h2>\n                            <div className=\"flex\">\n                                {isGigOwner && <h4 className=\"gig-desc\" onInput={(ev) => this.handleChange(ev, 'desc')} contentEditable={isDescEditble} >{gig.desc}</h4>}\n                                < EditIcon className=\"edit-icon\" onClick={() => this.toggleIsDescEditble(isDescEditble)} />\n                            </div>\n                        </div>\n                        {isDescEditble && <button onClick={this.onEdit}>Save</button>}\n\n                        {/* packagesList */}\n                        <SellerPreview seller={gig.owner} />\n                        <PackageList packages={gig.packages} />\n                        {/* sellerPreview */}\n                        <ReviewList gig={gig} user={user} />\n                        {user && <GigAddReview gig={gig} user={user} onAddReview={this.onAddReview} />}\n                        {/* reviews */}\n                    </div>\n                    <SideBar gig={gig} />\n                </section>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        gigs: state.gigModule.gigs,\n        user: state.userModule.user\n    }\n}\n\nconst mapDispatchToProps = {\n    addGig,\n    updateGig\n}\n\nexport const GigDetails = connect(mapStateToProps, mapDispatchToProps)(_GigDetails)\n\n\n//with input\n{/* {isTitleEditble || isGigOwner && <h1>{gig.title} {isGigOwner && <button onClick={() => this.makeEditable()}>Edit</button>}</h1>}\n                {isTitleEditble && <form action=\"\"> */}\n{/* <input className=\"title-input\" type=\"text\" /> */ }\n{/* </form>} */ }\n\n\n\n// {/* <div key={idx} className={`${todo.isDone && 'todo-done'} flex space-between`} onInput={(ev) => { onNoteChosen(ev, idx) }}>\n//                     <p contentEditable suppressContentEditableWarning={true}>{todo.text}</p>\n//                     <img className={`${!todo.isDone && 'my-active'} pointer`} onClick={() => { onTodoDone(idx) }} src=\"apps/Keep/assets/img/V.png\" />\n//                 </div> */}\n\n\n\n                // onUpdateNote = (ev, noteId, todoIdx) => {\n                //     if (!ev) return\n                //     const text = ev.target.innerText\n                //     noteService.getNoteById(noteId)\n                //         .then(noteToEdit => {\n                //             switch (noteToEdit.type) {\n                //                 case 'noteText':\n                //                     noteToEdit.info.text = text;\n                //                     noteService.save(noteToEdit)\n                //                     break\n                //                 case 'noteTodos':\n                //                     noteToEdit.info.todos[todoIdx].text = text;\n                //                     noteService.save(noteToEdit)\n                //                     break;\n                //                 case 'noteImg':\n                //                 case 'noteVideo':\n                //                     noteToEdit.info.title = text;\n                //                     noteService.save(noteToEdit)\n                //             }\n                //         })\n                // }\n","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/pages/Login.jsx",["142"],"import { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport { login, logout, addUser } from \"../store/actions/userActions.js\"\n\nclass _Login extends Component {\n\n    state = {\n        msg: '',\n        isSignUp: false,\n        loginCred: {\n            username: '',\n            password: ''\n        },\n        signupCred: {\n            username: '',\n            password: '',\n            fullname: ''\n        }\n    }\n\n    // componentDidMount () {\n\n    // }\n\n    componentWillUnmount() {\n        this.setState(\n            {\n                loginCred: { username: '', password: '' }\n            })\n    }\n\n    loginHandleChange = ev => {\n        const { name, value } = ev.target\n        this.setState(prevState => ({\n            loginCred: {\n                ...prevState.loginCred,\n                [name]: value\n            }\n        }))\n    }\n\n    signupHandleChange = ev => {\n        const { name, value } = ev.target\n        this.setState(prevState => ({\n            signupCred: {\n                ...prevState.signupCred,\n                [name]: value\n            }\n        }))\n    }\n\n    toggleIsNewUser = (ev) => {\n        ev.stopPropagation()\n        this.setState({ isSignUp: !this.state.isSignUp })\n    }\n\n    captureModalClick = (ev) => {\n        ev.stopPropagation()\n    }\n\n    doLogin = async ev => {\n        ev.preventDefault()\n        ev.stopPropagation()\n        const userCreds = this.state.loginCred\n        if (!userCreds.username || !userCreds.password) {\n            return this.setState({ loginCred: { username: '', password: '' }, msg: 'Please enter user/password' })\n        }\n        try {\n            await this.props.login(userCreds)\n            this.props.toggleLogin()\n\n        } catch (err) {\n            console.log('ERR', err)\n            this.setState(prevState => ({\n                loginCred: {\n                    ...prevState.loginCred,\n                    password: ''\n                },\n                msg: 'Wrong username or password'\n            }))\n        }\n    }\n\n    doLogout = () => {\n        this.props.logout()\n    }\n\n    doSignup = async ev => {\n        ev.preventDefault()\n        ev.stopPropagation()\n        const { username, password, fullname } = this.state.signupCred\n\n        if (!username || !password || !fullname) {\n            return this.setState({ msg: 'All inputs are required' })\n        }\n        try {\n            await this.props.addUser({ username, password, fullname })\n            this.props.toggleLogin()\n            this.props.history.push('/gig')\n        }\n        catch (err) {\n            console.log('ERR', err)\n            this.setState(prevState => ({\n                signupCred: {\n                    ...prevState.signupCred,\n                    password: ''\n                },\n                msg: 'Could not sign up please try again'\n            }))\n        }\n    }\n\n    render() {\n\n        const loggedInUser = this.props.user //TODO pay attention later \n        const { isSignUp, msg } = this.state\n\n        let signupSection = (\n            <>\n                <h1>Join Sixerr</h1>\n                <form className=\"frm\" onSubmit={this.doSignup}>\n                    <input\n                        type=\"text\"\n                        name=\"fullname\"\n                        value={this.state.signupCred.fullname}\n                        onChange={this.signupHandleChange}\n                        placeholder=\"Full name\"\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"username\"\n                        value={this.state.signupCred.username}\n                        onChange={this.signupHandleChange}\n                        placeholder=\"Username\"\n                    />\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        value={this.state.signupCred.password}\n                        onChange={this.signupHandleChange}\n                        placeholder=\"Password\"\n                    />\n                    <button>Continue</button>\n                    <hr />\n                    <h4>Already a member? <span onClick={this.toggleIsNewUser}>Sign In</span></h4>\n                </form>\n            </>\n        )\n        let loginSection = (\n            <>\n                <h1>Sign In to Sixerr</h1>\n                <form className=\"frm\" onSubmit={this.doLogin}>\n                    <input\n                        type=\"text\"\n                        name=\"username\"\n                        value={this.state.loginCred.username}\n                        onChange={this.loginHandleChange}\n                        placeholder=\"Username\"\n                        autoFocus\n                    />\n                    <br />\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        value={this.state.loginCred.password}\n                        onChange={this.loginHandleChange}\n                        placeholder=\"Password\"\n                    />\n                    <br />\n                    <button className=\"rounded\">Continue</button>\n                    <hr />\n                    <h4>Not a member yet? <span onClick={this.toggleIsNewUser}>Join Now</span></h4>\n                </form>\n            </>\n        )\n\n\n        return (\n            <div className=\"main-screen\" onClick={this.props.toggleLogin}>\n                <div className=\"login main-layout shadow rounded\" onClick={this.captureModalClick}>\n                    {msg && <p>{msg}</p>}\n                    {/* {loggedInUser && (\n                        <div>\n                            <h3>\n                                Welcome {loggedInUser.fullname}\n                                <button onClick={this.doLogout}>Logout</button>\n                            </h3>\n                        </div>\n                    )} */}\n                    {isSignUp && signupSection}\n                    {!isSignUp && loginSection}\n\n                </div>\n            </div>\n        )\n    }\n\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.userModule.user\n    }\n}\n\nconst mapDispatchToProps = {\n    login,\n    logout,\n    addUser,\n}\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)\n\n\n\n\n","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/pages/GigEdit.jsx",["143"],"import { loadGigs, addGig } from '../store/actions/gigActions.js';\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { gigService } from '../services/gigService.js'\n\n\nclass _GigEdit extends Component {\n\n    state = {\n        gig: {\n            title: '',\n            desc: '',\n            packages: null,\n            tags: '',\n        }\n    }\n\n    componentDidMount() {\n        const gigId = this.props.match.params.gigId\n        console.log(\"componentDidMount , gigId\", gigId)\n        if (gigId) {\n            gigService.getById(gigId).then((gig) => {\n                console.log(\"gigService.getById , gig\", gig)\n                this.setState({ gig })\n            })\n        }\n        else {\n            const packages = this.createTemplatePackages()\n            // todo call createGig from service and then setState\n            this.setState(prevState => {\n                return {\n                    gig: {\n                        ...prevState.gig,\n                        packages,\n                    }\n                }\n            })\n        }\n    }\n    onSaveNewGig = (ev) => {\n        console.log('on saved gig func :)');\n        ev.preventDefault()\n        const { gig } = this.state\n        this.props.addGig(gig).then(() => {\n            console.log('one line before history');\n            this.props.history.push('/gig');\n        })\n    }\n\n    createTemplatePackages = () => {\n        return [{ type: 'basic', desc: '', price: null, revisionsCount: null, deliveryDays: null, features: [] }]\n    }\n\n\n\n\n    handleInput = ({ target }) => {\n        const field = target.name\n        console.log(\"field\", field)\n        const value = target.value\n        console.log(\"value\", value)\n        this.setState(prevState => {\n            return {\n                gig: {\n                    ...prevState.gig,\n                    [field]: value\n                }\n            }\n        })\n    }\n    handlePackagesInputs = ({ target }) => {\n        const field = target.name\n        let value;\n        if (target.type === 'number') value = +target.value\n        else value = target.value\n        const { packages } = this.state.gig\n        const pack = { ...packages[0] }\n        pack[field] = value\n        packages[0] = { ...pack }\n        console.log(\"packages\", packages)\n        this.setState(prevState => {\n            return {\n                gig: {\n                    ...prevState.gig,\n                    packages\n\n                }\n            }\n        })\n\n    }\n    handlePackageFeatures = (value) => {\n        const { gig } = this.state\n        const { features } = gig.packages[0]\n        if (!features.includes(value)) {\n            features.push(value)\n            gig.features = features\n            this.setState(prevState => {\n                return {\n                    gig: {\n                        ...prevState.gig,\n                    }\n                }\n            })\n        }\n    }\n\n    render() {\n        const { gig } = this.state\n        const { packages } = gig\n        console.log(\"render , gig\", gig)\n        console.log(\"render , packages\", packages)\n        if (!gig.packages) return <div>loading</div>\n        return (\n            <>\n                <form onSubmit={this.onSaveNewGig} className=\"flex column justify-center\">\n                    <h4>Edit Title</h4>\n                    <textarea name=\"title\" autoFocus rows=\"3\" cols=\"60\" type=\"text\" placeholder=\"Enter Gig Title...\" value={gig.title} onChange={this.handleInput} required autoComplete=\"off\" />\n                    <h4>Edit Desc</h4>\n                    <textarea name=\"desc\" rows=\"3\" cols=\"60\" type=\"text\" placeholder=\"Enter Gig Desc...\" value={gig.desc} onChange={this.handleInput} required autoComplete=\"off\" />\n                    <h4>Choose Tag</h4>\n                    <select onChange={this.handleInput} name=\"tags\" required>\n                        <option value=\"graphic design\">graphic design </option>\n                        <option value=\"minimalist\">minimalist</option>\n                        <option value=\"flat\">flat</option>\n                        <option value=\"modern\">modern</option>\n                        <option value=\"book\">book</option>\n                        <option value=\"logo design\">logo design</option>\n                        <option value=\"cover\">cover</option>\n                    </select>\n                    <h4>Package</h4>\n                    <textarea name=\"desc\" rows=\"3\" cols=\"60\" value={gig.packages[0].desc} type=\"text\" placeholder=\"Enter package Desc...\" onChange={this.handlePackagesInputs} required autoComplete=\"off\" />\n                    <input type=\"number\" name=\"price\" placeholder=\"enter packPrice\" value={gig.packages[0].price} onChange={this.handlePackagesInputs} required autoComplete=\"off\" />\n                    <input type=\"number\" name=\"revisionCount\" placeholder=\"enter Revision Count...\" value={gig.packages[0].revisionCount} onChange={this.handlePackagesInputs} required autoComplete=\"off\" />\n                    <input type=\"number\" name=\"deliveryDays\" placeholder=\"enter Revision Count...\" value={gig.packages[0].deliveryDays} onChange={this.handlePackagesInputs} required autoComplete=\"off\" />\n                    <div>\n                        <button type=\"button\" onClick={() => this.handlePackageFeatures(\"3D Modeling\")}>3D Modeling</button>\n                        <button type=\"button\" onClick={() => this.handlePackageFeatures(\"Include Environment\")}>Include Environment</button>\n                    </div>\n                    <div>\n                        <button>Save</button>\n                    </div>\n                </form>\n            </>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        gigs: state.gigModule.gigs,\n    }\n}\n\nconst mapDispatchToProps = {\n    addGig,\n}\n\nexport const GigEdit = connect(mapStateToProps, mapDispatchToProps)(_GigEdit)","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/GigList.jsx",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/PackageList.jsx",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/store/actions/gigActions.js",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/store/actions/userActions.js",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/services/gigService.js",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/SellerPreview.jsx",["144"],"\nexport function SellerPreview({ seller }) {\n    console.log(\"SellerPreview , seller\", seller)\n    return (\n        <section className=\"about-seller-container flex column\">\n            <h2>About The Seller</h2>\n            <div className=\"flex\">\n                <div className=\"seller-img-container\">\n                    <img src={seller.imgUrl} />\n                </div>\n                <div className=\"flex column\">\n                    <p>{seller.fullname}</p>\n                    <p>Creator of AR filters</p>\n                    <p>Rate *****</p>\n                    <button>Contact Me</button>\n                </div>\n            </div>\n            <div className=\"flex column\">\n                {/* <div className=\"flex space-between\">\n                    <p>From</p>\n                    <p>Member since</p>\n                </div> */}\n            </div>\n        </section>\n    )\n}\n","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/services/userService.js",["145"],"// import { storageService } from './asyncStorageService'\nimport { httpService } from './httpService'\nconst SCORE_FOR_REVIEW = 10\n\nexport const userService = {\n    login,\n    logout,\n    signup,\n    getUsers,\n    getById,\n    remove,\n    update,\n    getLoggedinUser,\n}\n\nwindow.userService = userService\n// Note: due to async, must run one by one...\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\n\nfunction getUsers() {\n    // return storageService.query('user')\n    return httpService.get(`user`)\n}\n\nfunction getById(userId) {\n    // return storageService.get('user', userId)\n    return httpService.get(`user/${userId}`)\n}\nfunction remove(userId) {\n    // return storageService.remove('user', userId)\n    return httpService.delete(`user/${userId}`)\n}\n\nasync function update(user) {\n    // return storageService.put('user', user)\n    user = await httpService.put(`user/${user._id}`, user)\n    // Handle case in which admin updates other user's details\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\n}\n\nasync function login(userCred) {\n    const users = await httpService.get('user')\n    const user = users.find(user => user.username === userCred.username && user.password === userCred.password)\n    if (user) {\n        console.log('Found user')\n        return _saveLocalUser(user)\n    }\n    else throw new Error('no user')\n    // const user = await httpService.post('auth/login', userCred)\n    // if (user) return _saveLocalUser(user)\n}\nasync function signup(userCred) {\n    const user = await httpService.post('user', userCred)\n    // const user = await httpService.post('auth/signup', userCred)\n    return _saveLocalUser(user)\n}\nasync function logout() {\n    sessionStorage.clear()\n    return\n    // return await httpService.post('auth/logout')\n}\nfunction _saveLocalUser(user) {\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\n    return user\n}\n\nfunction getLoggedinUser() {\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\n}\n\n","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/services/httpService.js",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/GigPreview.jsx",[],["146","147"],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/PackagePreview.jsx",["148"],"import React from 'react'\n\nexport function PackagePreview({ pack }) {\n    console.log(\"PackagePreview , package\", pack)\n    return (\n        <>\n        <div>Package Preview</div>\n        </>\n    )\n}\n\n\n{/* <div key={idx} className={`${todo.isDone && 'todo-done'} flex space-between`} onInput={(ev) => { onNoteChosen(ev, idx) }}>\n                    <p contentEditable suppressContentEditableWarning={true}>{todo.text}</p>\n                    <img className={`${!todo.isDone && 'my-active'} pointer`} onClick={() => { onTodoDone(idx) }} src=\"apps/Keep/assets/img/V.png\" />\n                </div> */}\n\n\n\n                // onUpdateNote = (ev, noteId, todoIdx) => {\n                //     if (!ev) return\n                //     const text = ev.target.innerText\n                //     noteService.getNoteById(noteId)\n                //         .then(noteToEdit => {\n                //             switch (noteToEdit.type) {\n                //                 case 'noteText':\n                //                     noteToEdit.info.text = text;\n                //                     noteService.save(noteToEdit)\n                //                     break\n                //                 case 'noteTodos':\n                //                     noteToEdit.info.todos[todoIdx].text = text;\n                //                     noteService.save(noteToEdit)\n                //                     break;\n                //                 case 'noteImg':\n                //                 case 'noteVideo':\n                //                     noteToEdit.info.title = text;\n                //                     noteService.save(noteToEdit)\n                //             }\n                //         })\n                // }\n","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/services/utilService.js",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/GigAddReview.jsx",["149","150","151","152"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { utilService } from '../services/utilService.js'\nimport { addGig, updateGig } from '../store/actions/gigActions'\nimport StarIcon from '@material-ui/icons/Star';\nclass _GigAddReview extends Component {\n\n\n    state = {\n        gig: null,\n        user: null,\n        review: null,\n    }\n\n    componentDidMount() {\n        const { gig } = this.props\n        const { user } = this.props\n        const review = this.createReviewTemplate(gig, user)\n        this.setState({ gig, user, review })\n    }\n\n    createReviewTemplate = (gig, user) => {\n        const by = { _id: user._id, fullname: user.fullname, imgUrl: user.imgUrl }\n        const id = utilService.makeId()\n        const review = { id, rating: '', txt: '', createdAt: null, purchasedAt: null, seller: gig.owner, by }\n        return review\n    }\n\n    handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.value\n        this.setState(prevState => {\n            return {\n                review: {\n                    ...prevState.review,\n                    [field]: value\n                }\n            }\n        })\n    }\n    handleRate = (rate) => {\n        const { review } = { ...this.state }\n        review.rating = rate\n        console.log(\"review\", review)\n        this.setState({ review })\n    }\n\n    onAddReview = () => {\n        const { review } = this.state\n        const { gig } = this.state\n        const { user } = this.state\n        let reviewToAdd = { ...review }\n        const purchasedAt = \"purchase At\"\n        const date = Date.now()\n        reviewToAdd.createdAt = date\n        reviewToAdd.purchasedAt = purchasedAt\n        console.log(\"reviewToAdd\", reviewToAdd)\n        gig.reviews.push(reviewToAdd)\n        this.props.updateGig(gig).then(() => {\n            console.log('review added succefully');\n        })\n    }\n\n    render() {\n        const { user, gig, review } = this.state\n        return (\n            <>\n                {/* Require on Button....  */}\n                <div className=\"flex\">\n                    <StarIcon className=\"star\" onClick={() => this.handleRate('1')} ></StarIcon>\n                    <StarIcon className=\"star\" onClick={() => this.handleRate('2')} ></StarIcon>\n                    <StarIcon className=\"star\" onClick={() => this.handleRate('3')} ></StarIcon>\n                    <StarIcon className=\"star\" onClick={() => this.handleRate('4')} ></StarIcon>\n                    <StarIcon className=\"star\" onClick={() => this.handleRate('5')} ></StarIcon>\n                </div>\n                {/* <form onSubmit={this.onAddReview()} className=\"flex column justify-center\"> */}\n                <textarea type=\"text\" name=\"txt\" placeholder='enter review...' onChange={this.handleChange} required />\n                <button onClick={() => this.onAddReview()}>Add Review</button>\n                {/* </form> */}\n\n            </>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        gigs: state.gigModule.gigs,\n        user: state.userModule.user\n    }\n}\n\nconst mapDispatchToProps = {\n    addGig,\n    updateGig\n}\n\nexport const GigAddReview = connect(mapStateToProps, mapDispatchToProps)(_GigAddReview)","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/SideBar.jsx",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/ReviewList.jsx",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/ReviewPreview.jsx",[],"/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/Hero.jsx",["153","154"],"import React from 'react';\nimport { connect } from 'react-redux'\nimport StarRateIcon from '@material-ui/icons/StarRate';\n\nconst heros = [\n    {\n        imgUrl: 'https://images.unsplash.com/photo-1569124589354-615739ae007b',\n        whoAmI: 'woman',\n        username: 'Andrea',\n        occupation: 'Video Editor',\n        rating: 5\n    },\n    {\n        imgUrl: 'https://images.unsplash.com/photo-1593104547489-5cfb3839a3b5',\n        whoAmI: 'woman',\n        username: 'Hiluli',\n        occupation: 'DevOps'\n    },\n    {\n        imgUrl: 'https://images.unsplash.com/photo-1567468219153-4b1dea5227ea',\n        whoAmI: 'woman',\n        username: 'Puka bat David',\n        occupation: 'React JS Expert',\n        rating: 5\n    },\n    {\n        imgUrl: 'https://images.unsplash.com/photo-1581368135153-a506cf13b1e1',\n        whoAmI: 'man',\n        username: 'Zach',\n        occupation: 'Narrator'\n    }\n]\nclass _Hero extends React.Component {\n\n    state = {\n        currHeroIdx: 0,\n        heros: [\n            {\n                imgUrl: 'https://images.unsplash.com/photo-1569124589354-615739ae007b',\n                whoAmI: 'woman',\n                username: 'Andrea',\n                occupation: 'Video Editor',\n                rating: 5\n            },\n            {\n                imgUrl: 'https://images.unsplash.com/photo-1581368135153-a506cf13b1e1',\n                whoAmI: 'man',\n                username: 'Zach',\n                occupation: 'Narrator'\n            },\n            {\n                imgUrl: 'https://images.unsplash.com/photo-1593104547489-5cfb3839a3b5',\n                whoAmI: 'woman',\n                username: 'Hiluli',\n                occupation: 'DevOps'\n            },\n            {\n                imgUrl: 'https://images.unsplash.com/photo-1567468219153-4b1dea5227ea',\n                whoAmI: 'woman',\n                username: 'Puka bat David',\n                occupation: 'React JS Expert',\n                rating: 5\n            }\n        ]\n    }\n\n    heroInterval\n\n    componentDidMount() {\n        this.heroInterval = setInterval(this.nextHero, 3000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.heroInterval)\n    }\n\n    nextHero = () => {\n        const herosCount = this.state.heros.length\n        const nextHero = (this.state.currHeroIdx === herosCount - 1) ?\n            0 : this.state.currHeroIdx + 1\n        this.setState({currHeroIdx: nextHero})\n    }\n\n    render() {\n        const { heros, currHeroIdx } = this.state\n        const hero = heros[currHeroIdx]\n        const whoAmI = heros[currHeroIdx].whoAmI\n        return (\n            <>\n                <section className=\"hero\">\n                    <h1 className=\"main-layout\">Find the perfect {whoAmI} for your perfect business</h1>\n                    <img src={hero.imgUrl} alt=\"\" />\n                    <div className=\"hero-snippet\">\n                        <div>\n                            {/* <StarRateIcon />\n                            <StarRateIcon />\n                            <StarRateIcon />\n                            <StarRateIcon /> */}\n                        </div>\n                        <span>{hero.username}</span>, {hero.occupation}\n                    </div>\n                </section>\n            </>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        // gigs: state.gigModule.gigs,\n        // user: state.userModule.user\n    }\n}\n\nconst mapDispatchToProps = {\n    // addGig,\n    // updateGig\n}\n\nexport const Hero = connect(mapStateToProps, mapDispatchToProps)(_Hero)","/Users/oriweinstock/Dropbox/__Project__CODE/__CA_GIT/Sixerr/sixerr/src/cmps/GigImgLightBox.jsx",["155","156","157"],"import React from 'react'\nimport CloseIcon from '@material-ui/icons/Close';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\n\nexport function GigImgLightBox({ currImg, onToggleImgLightbox, onNextPageLightBox, onPrevPageLightBox }) {\n    console.log(\"GigImgLightBox , onToggleImgLightbox\", onToggleImgLightbox)\n    console.log('currImg', currImg);\n    return (\n        // <section className=\"img-light-box\" >\n             <section className=\"img-light-box\"  onClick={() => onToggleImgLightbox()}> \n            <div>\n                <img src={currImg} />\n                <CloseIcon className=\"close-light-box\" onClick={() => onToggleImgLightbox()} />\n                {/* <SkipNextIcon className=\"next-img\" onClick={() => onNextPageLightBox()} />\n                <SkipPreviousIcon className=\"prev-img\" onClick={() => onPrevPageLightBox()} /> */}\n                {/* <button className=\"next-img\" onClick={() => onNextPageLightBox()}>Next</button> */}\n            </div>\n        </section>\n    )\n}\n",{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":4,"column":10,"nodeType":"164","messageId":"165","endLine":4,"endColumn":15},{"ruleId":"162","severity":1,"message":"166","line":16,"column":10,"nodeType":"164","messageId":"165","endLine":16,"endColumn":17},{"ruleId":"167","severity":1,"message":"168","line":174,"column":37,"nodeType":"169","endLine":174,"endColumn":57},{"ruleId":"170","severity":1,"message":"171","line":230,"column":1,"nodeType":"172","messageId":"173","endLine":231,"endColumn":56},{"ruleId":"170","severity":1,"message":"171","line":232,"column":1,"nodeType":"172","messageId":"173","endLine":232,"endColumn":55},{"ruleId":"170","severity":1,"message":"171","line":233,"column":1,"nodeType":"172","messageId":"173","endLine":233,"endColumn":18},{"ruleId":"162","severity":1,"message":"174","line":116,"column":15,"nodeType":"164","messageId":"165","endLine":116,"endColumn":27},{"ruleId":"162","severity":1,"message":"175","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":9,"column":21,"nodeType":"169","endLine":9,"endColumn":48},{"ruleId":"162","severity":1,"message":"176","line":3,"column":7,"nodeType":"164","messageId":"165","endLine":3,"endColumn":23},{"ruleId":"158","replacedBy":"177"},{"ruleId":"160","replacedBy":"178"},{"ruleId":"170","severity":1,"message":"171","line":13,"column":1,"nodeType":"172","messageId":"173","endLine":16,"endColumn":27},{"ruleId":"162","severity":1,"message":"179","line":51,"column":17,"nodeType":"164","messageId":"165","endLine":51,"endColumn":21},{"ruleId":"162","severity":1,"message":"179","line":65,"column":17,"nodeType":"164","messageId":"165","endLine":65,"endColumn":21},{"ruleId":"162","severity":1,"message":"180","line":65,"column":23,"nodeType":"164","messageId":"165","endLine":65,"endColumn":26},{"ruleId":"162","severity":1,"message":"181","line":65,"column":28,"nodeType":"164","messageId":"165","endLine":65,"endColumn":34},{"ruleId":"162","severity":1,"message":"182","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":20},{"ruleId":"162","severity":1,"message":"183","line":5,"column":7,"nodeType":"164","messageId":"165","endLine":5,"endColumn":12},{"ruleId":"162","severity":1,"message":"184","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":20},{"ruleId":"162","severity":1,"message":"185","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":24},{"ruleId":"167","severity":1,"message":"168","line":13,"column":17,"nodeType":"169","endLine":13,"endColumn":38},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'gigEdit' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'loggedInUser' is assigned a value but never used.","'loadGigs' is defined but never used.","'SCORE_FOR_REVIEW' is assigned a value but never used.",["186"],["187"],"'user' is assigned a value but never used.","'gig' is assigned a value but never used.","'review' is assigned a value but never used.","'StarRateIcon' is defined but never used.","'heros' is assigned a value but never used.","'SkipNextIcon' is defined but never used.","'SkipPreviousIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]