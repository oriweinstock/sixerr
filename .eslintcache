[{"C:\\dev\\finalSprint\\sixerr\\src\\index.js":"1","C:\\dev\\finalSprint\\sixerr\\src\\App.jsx":"2","C:\\dev\\finalSprint\\sixerr\\src\\store\\store.js":"3","C:\\dev\\finalSprint\\sixerr\\src\\reportWebVitals.js":"4","C:\\dev\\finalSprint\\sixerr\\src\\serviceWorkerRegistration.js":"5","C:\\dev\\finalSprint\\sixerr\\src\\store\\reducers\\userReducer.js":"6","C:\\dev\\finalSprint\\sixerr\\src\\store\\reducers\\gigReducer.js":"7","C:\\dev\\finalSprint\\sixerr\\src\\routes.js":"8","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\AppHeader.jsx":"9","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\Hero.jsx":"10","C:\\dev\\finalSprint\\sixerr\\src\\pages\\GigDetails.jsx":"11","C:\\dev\\finalSprint\\sixerr\\src\\pages\\SixerrApp.jsx":"12","C:\\dev\\finalSprint\\sixerr\\src\\pages\\GigEdit.jsx":"13","C:\\dev\\finalSprint\\sixerr\\src\\pages\\Profile.jsx":"14","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SideBar.jsx":"15","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\PackageList.jsx":"16","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigAddReview.jsx":"17","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\EditableElement.jsx":"18","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ReviewList.jsx":"19","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ImgGallery.jsx":"20","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ShortReviewList.jsx":"21","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ReviewStats.jsx":"22","C:\\dev\\finalSprint\\sixerr\\src\\store\\actions\\userActions.js":"23","C:\\dev\\finalSprint\\sixerr\\src\\store\\actions\\gigActions.js":"24","C:\\dev\\finalSprint\\sixerr\\src\\pages\\Login.jsx":"25","C:\\dev\\finalSprint\\sixerr\\src\\services\\gigService.js":"26","C:\\dev\\finalSprint\\sixerr\\src\\services\\utilService.js":"27","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigList.jsx":"28","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\HoverRating.jsx":"29","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ReviewPreview.jsx":"30","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SellerPreview.jsx":"31","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigImgLightBox.jsx":"32","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SellerOverview.jsx":"33","C:\\dev\\finalSprint\\sixerr\\src\\services\\cloudinaryService.js":"34","C:\\dev\\finalSprint\\sixerr\\src\\services\\userService.js":"35","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\PackagePreview.jsx":"36","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ShortReviewPreview.jsx":"37","C:\\dev\\finalSprint\\sixerr\\src\\services\\httpService.js":"38","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigPreview.jsx":"39","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\Carousel.jsx":"40"},{"size":1073,"mtime":1610561408555,"results":"41","hashOfConfig":"42"},{"size":618,"mtime":1610871918283,"results":"43","hashOfConfig":"42"},{"size":568,"mtime":1610618978672,"results":"44","hashOfConfig":"42"},{"size":377,"mtime":1610547361095,"results":"45","hashOfConfig":"42"},{"size":5201,"mtime":1610547361097,"results":"46","hashOfConfig":"42"},{"size":479,"mtime":1610618978671,"results":"47","hashOfConfig":"42"},{"size":831,"mtime":1610871918295,"results":"48","hashOfConfig":"42"},{"size":693,"mtime":1610747748129,"results":"49","hashOfConfig":"42"},{"size":2499,"mtime":1610835847348,"results":"50","hashOfConfig":"42"},{"size":3793,"mtime":1610747748126,"results":"51","hashOfConfig":"42"},{"size":8858,"mtime":1610960936284,"results":"52","hashOfConfig":"42"},{"size":2188,"mtime":1610888041094,"results":"53","hashOfConfig":"42"},{"size":7727,"mtime":1610898628689,"results":"54","hashOfConfig":"42"},{"size":4519,"mtime":1610888041092,"results":"55","hashOfConfig":"42"},{"size":1842,"mtime":1610638027360,"results":"56","hashOfConfig":"42"},{"size":348,"mtime":1610898395196,"results":"57","hashOfConfig":"42"},{"size":3062,"mtime":1610898308108,"results":"58","hashOfConfig":"42"},{"size":2516,"mtime":1610871918288,"results":"59","hashOfConfig":"42"},{"size":467,"mtime":1610639702681,"results":"60","hashOfConfig":"42"},{"size":1213,"mtime":1610931774149,"results":"61","hashOfConfig":"42"},{"size":359,"mtime":1610898509459,"results":"62","hashOfConfig":"42"},{"size":1238,"mtime":1610871918291,"results":"63","hashOfConfig":"42"},{"size":1645,"mtime":1610834936434,"results":"64","hashOfConfig":"42"},{"size":1415,"mtime":1610716981671,"results":"65","hashOfConfig":"42"},{"size":6482,"mtime":1610834936432,"results":"66","hashOfConfig":"42"},{"size":770,"mtime":1610564258615,"results":"67","hashOfConfig":"42"},{"size":1670,"mtime":1610713989761,"results":"68","hashOfConfig":"42"},{"size":443,"mtime":1610888041082,"results":"69","hashOfConfig":"42"},{"size":1091,"mtime":1610892815248,"results":"70","hashOfConfig":"42"},{"size":2131,"mtime":1610915663832,"results":"71","hashOfConfig":"42"},{"size":2343,"mtime":1610916965971,"results":"72","hashOfConfig":"42"},{"size":930,"mtime":1610932399231,"results":"73","hashOfConfig":"42"},{"size":1025,"mtime":1610916911678,"results":"74","hashOfConfig":"42"},{"size":653,"mtime":1610713989759,"results":"75","hashOfConfig":"42"},{"size":2288,"mtime":1610888041096,"results":"76","hashOfConfig":"42"},{"size":162,"mtime":1610826226200,"results":"77","hashOfConfig":"42"},{"size":1114,"mtime":1610916037131,"results":"78","hashOfConfig":"42"},{"size":1077,"mtime":1610561408561,"results":"79","hashOfConfig":"42"},{"size":1910,"mtime":1610888041086,"results":"80","hashOfConfig":"42"},{"size":1220,"mtime":1610929597377,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1xwmuwb",{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"84"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\dev\\finalSprint\\sixerr\\src\\index.js",[],["177","178"],"C:\\dev\\finalSprint\\sixerr\\src\\App.jsx",["179"],"import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport './assets/styles/basics/styles.scss';\r\nimport { AppHeader } from './cmps/AppHeader';\r\nimport { Hero } from './cmps/Hero';\r\nimport { routes } from './routes';\r\n\r\nexport function App() {\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <header className=\"\">\r\n          <AppHeader />\r\n        </header>\r\n        <main>\r\n          <Switch>\r\n            {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n","C:\\dev\\finalSprint\\sixerr\\src\\store\\store.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\reportWebVitals.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\serviceWorkerRegistration.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\reducers\\userReducer.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\reducers\\gigReducer.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\routes.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\AppHeader.jsx",["180"],"// import React, { Component } from 'react'\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Login } from '../pages/Login'\r\nimport { logout } from '../store/actions/userActions'\r\n\r\n\r\nclass _AppHeader extends React.Component {\r\n\r\n    state = {\r\n        isLoginOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n    // logout = async () => {\r\n    //     await this.props.logout()\r\n    //     // console.log('user logged out. frontend')\r\n    // }\r\n\r\n\r\n    onToggleLogin = () => {\r\n        this.setState({ isLoginOpen: !this.state.isLoginOpen })\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props\r\n        const { isLoginOpen } = this.state\r\n        return (\r\n            <>\r\n                <section className=\"app-header flex space-between align-center main-layout\">\r\n                    <NavLink to=\"/\">\r\n                    <h1>Sixerr<span>.</span></h1>\r\n                    </NavLink>\r\n                    <ul className=\"header-nav clean-list flex align-center bold\">\r\n\r\n                        <NavLink className=\"fast-trans\" to=\"/\"><li>Home</li></NavLink>\r\n                        <NavLink className=\"fast-trans\" to=\"/gig\"><li>Explore</li></NavLink>\r\n                        {/* <NavLink className=\"fast-trans\" to=\"/chat\"><li>Messages</li></NavLink> */}\r\n                        {/* <NavLink className=\"fast-trans\" to=\"/order\"><li>Orders</li></NavLink> */}\r\n                        {user && <NavLink className=\"fast-trans\" to=\"#\" onClick={this.props.logout}>\r\n                            <li>Logout</li>\r\n                        </NavLink>}\r\n                        {!user &&\r\n                            <NavLink className=\"\" to=\"#\" onClick={this.onToggleLogin}>\r\n                                <li>Login</li>\r\n                            </NavLink>}\r\n                        <NavLink to=\"/profile\">\r\n                            {/* {user && <h3>{user.username}</h3>} */}\r\n                            {user && <li><img src={user.imgUrl} /></li>}\r\n                        </NavLink>\r\n                    </ul>\r\n\r\n                </section>\r\n                {isLoginOpen && !user && <Login toggleLogin={this.onToggleLogin} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapGlobalStateToProps = (state) => {\r\n    return {\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    logout\r\n}\r\n\r\nexport const AppHeader = connect(mapGlobalStateToProps, mapDispatchToProps)(_AppHeader)","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\Hero.jsx",["181"],"import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport { SixerrApp } from '../pages/SixerrApp.jsx';\r\n\r\nconst heros = [\r\n    {\r\n        imgUrl: 'https://images.unsplash.com/photo-1569124589354-615739ae007b',\r\n        whoAmI: 'woman',\r\n        username: 'Andrea',\r\n        occupation: 'Video Editor',\r\n        rating: 5\r\n    },\r\n    {\r\n        imgUrl: 'https://images.unsplash.com/photo-1593104547489-5cfb3839a3b5',\r\n        whoAmI: 'woman',\r\n        username: 'Hiluli',\r\n        occupation: 'DevOps'\r\n    },\r\n    {\r\n        imgUrl: 'https://images.unsplash.com/photo-1567468219153-4b1dea5227ea',\r\n        whoAmI: 'woman',\r\n        username: 'Puka bat David',\r\n        occupation: 'React JS Expert',\r\n        rating: 5\r\n    },\r\n    {\r\n        imgUrl: 'https://images.unsplash.com/photo-1581368135153-a506cf13b1e1',\r\n        whoAmI: 'man',\r\n        username: 'Zach',\r\n        occupation: 'Narrator'\r\n    }\r\n]\r\nclass _Hero extends React.Component {\r\n\r\n    state = {\r\n        currHeroIdx: 0,\r\n        heros: [\r\n            {\r\n                imgUrl: 'https://images.unsplash.com/photo-1569124589354-615739ae007b',\r\n                whoAmI: 'woman',\r\n                username: 'Andrea',\r\n                occupation: 'Video Editor',\r\n                rating: 5\r\n            },\r\n            {\r\n                imgUrl: 'https://images.unsplash.com/photo-1581368135153-a506cf13b1e1',\r\n                whoAmI: 'man',\r\n                username: 'Zach',\r\n                occupation: 'Narrator'\r\n            },\r\n            {\r\n                imgUrl: 'https://images.unsplash.com/photo-1593104547489-5cfb3839a3b5',\r\n                whoAmI: 'woman',\r\n                username: 'Hiluli',\r\n                occupation: 'DevOps'\r\n            },\r\n            {\r\n                imgUrl: 'https://images.unsplash.com/photo-1567468219153-4b1dea5227ea',\r\n                whoAmI: 'woman',\r\n                username: 'Puka bat David',\r\n                occupation: 'React JS Expert',\r\n                rating: 5\r\n            }\r\n        ]\r\n    }\r\n\r\n    heroInterval\r\n\r\n    componentDidMount() {\r\n        this.heroInterval = setInterval(this.nextHero, 6000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.heroInterval)\r\n    }\r\n\r\n    nextHero = () => {\r\n        const herosCount = this.state.heros.length\r\n        const nextHero = (this.state.currHeroIdx === herosCount - 1) ?\r\n            0 : this.state.currHeroIdx + 1\r\n        this.setState({currHeroIdx: nextHero})\r\n    }\r\n\r\n    render() {\r\n        const { heros, currHeroIdx } = this.state\r\n        const hero = heros[currHeroIdx]\r\n        const whoAmI = heros[currHeroIdx].whoAmI\r\n        return (\r\n            <>\r\n                <section className=\"hero\">\r\n                    <h1 className=\"main-layout\">Find the perfect {whoAmI} for your perfect business</h1>\r\n                    <img src={hero.imgUrl} alt=\"\" />\r\n                    <div className=\"hero-snippet\">\r\n                        <div className=\"stars\">\r\n                            <StarRateIcon />\r\n                            <StarRateIcon />\r\n                            <StarRateIcon />\r\n                            <StarRateIcon />\r\n                            <StarRateIcon />\r\n                        </div>\r\n                        <span>{hero.username}</span>, {hero.occupation}\r\n                    </div>\r\n                    <SixerrApp />\r\n                </section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // gigs: state.gigModule.gigs,\r\n        // user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    // addGig,\r\n    // updateGig\r\n}\r\n\r\nexport const Hero = connect(mapStateToProps, mapDispatchToProps)(_Hero)","C:\\dev\\finalSprint\\sixerr\\src\\pages\\GigDetails.jsx",["182","183","184"],"C:\\dev\\finalSprint\\sixerr\\src\\pages\\SixerrApp.jsx",["185"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GigList } from '../cmps/GigList.jsx';\r\nimport { Login } from './Login.jsx'\r\nimport { loadGigs, setFilter, removeGig } from \"../store/actions/gigActions.js\";\r\nimport { updateUser } from \"../store/actions/userActions.js\";\r\n\r\n\r\nclass _SixerrApp extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadGigs()\r\n    }\r\n\r\n    onUserViewGig = (gigId) => {\r\n        const user = {...this.props.user}\r\n        if (user.viewedGigIds) {\r\n            if (!user.viewedGigIds.find(viewedGigId => viewedGigId === gigId)) user.viewedGigIds.push(gigId)\r\n        } else user.viewedGigIds = [gigId]\r\n        this.props.updateUser(user)\r\n    }\r\n\r\n    onDelete = () => { }\r\n    \r\n    onFavoriteToggle = (ev, gigId) => { \r\n        ev.stopPropagation()\r\n        const user = {...this.props.user}\r\n        if (user.favoriteIds) {\r\n            if (user.favoriteIds.find(favoriteId => favoriteId === gigId)) user.favoriteIds = user.favoriteIds.filter(favoriteId => favoriteId !== gigId)\r\n            else user.favoriteIds.push(gigId)\r\n        } else user.favoriteIds = [gigId]\r\n        console.log('user.favoriteIds',user.favoriteIds)\r\n        this.props.updateUser(user)\r\n    }\r\n\r\n    render() {\r\n        const {user} = this.props\r\n        if (user) console.log('user favorites', user.favoriteIds)\r\n        return (\r\n            <section className=\"sixerr-app main-layout\">\r\n                <div className=\"flex space-around align-center mrg-top mrg-bottom\">\r\n                    {/* <GigFilter /> */}\r\n                </div>\r\n                <GigList gigs={this.props.gigs} onUserViewGig={this.onUserViewGig} onFavoriteToggle={this.onFavoriteToggle} user={this.props.user} onDelete={this.onDelete} />\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        gigs: state.gigModule.gigs,\r\n        filterBy: state.gigModule.filterBy,\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadGigs,\r\n    setFilter,\r\n    removeGig,\r\n    updateUser\r\n}\r\n\r\nexport const SixerrApp = connect(mapStateToProps, mapDispatchToProps)(_SixerrApp)\r\n","C:\\dev\\finalSprint\\sixerr\\src\\pages\\GigEdit.jsx",["186","187","188","189"],"import { loadGigs, addGig } from '../store/actions/gigActions.js';\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { gigService } from '../services/gigService.js'\r\n\r\n\r\n\r\nclass _GigEdit extends Component {\r\n\r\n    state = {\r\n        gig: {\r\n            title: '',\r\n            desc: '',\r\n            packages: null,\r\n            tags: '',\r\n        },\r\n        currFeature: ''\r\n    }\r\n\r\n    featureIdx = 0\r\n\r\n    componentDidMount() {\r\n        const gigId = this.props.match.params.gigId\r\n        if (gigId) {\r\n            gigService.getById(gigId).then((gig) => {\r\n                console.log(\"gigService.getById , gig\", gig)\r\n                this.setState({ gig })\r\n            })\r\n        }\r\n        else {\r\n            const gig = this.createGigTemplate()\r\n            this.setState({ gig })\r\n            // todo call createGig from service and then setState\r\n        }\r\n    }\r\n    onSaveNewGig = (ev) => {\r\n        ev.preventDefault()\r\n        const { gig } = this.state\r\n        this.props.addGig(gig).then(() => {\r\n            console.log('one line before history');\r\n            this.props.history.push('/gig');\r\n        })\r\n    }\r\n\r\n    createTemplatePackages = () => {\r\n        return [{ type: 'basic', desc: '', price: null, revisionCount: null, deliveryDays: null, features: [] }]\r\n    }\r\n\r\n    createGigTemplate = () => {\r\n        const { user } = this.props\r\n        const packages = this.createTemplatePackages()\r\n        const defaultImgUrl = \"https://fiverr-res.cloudinary.com/images/t_main1,q_auto,f_auto,q_auto,f_auto/gigs3/176041336/original/f83ff537301d6eeb9c0cac8300bfa078098e95fb/design-and-develop-an-eye-catchy-website.jpg\"\r\n        const gig = {\r\n            title: \"\",\r\n            desc: \"\",\r\n            tags: [],\r\n            packages,\r\n            owner: user,\r\n            imgUrls: [defaultImgUrl],\r\n            reviews: []\r\n        }\r\n        return gig\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const field = target.name\r\n        let value = target.value\r\n        if (field === 'tags') {\r\n            const tags = [value]\r\n            value = tags\r\n        }\r\n        this.setState(prevState => {\r\n            return {\r\n                gig: {\r\n                    ...prevState.gig,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n    handlePackagesInputs = ({ target }) => {\r\n        const field = target.name\r\n        let value;\r\n        if (target.type === 'number') value = +target.value\r\n        else value = target.value\r\n        const { packages } = this.state.gig\r\n        const pack = { ...packages[0] }\r\n        pack[field] = value\r\n        packages[0] = { ...pack }\r\n        this.setState(prevState => {\r\n            return {\r\n                gig: {\r\n                    ...prevState.gig,\r\n                    packages\r\n\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    handlePackageFeatures = (value) => {\r\n        const { gig } = this.state\r\n        const { features } = gig.packages[0]\r\n        if (!features.includes(value)) {\r\n            features.push(value)\r\n            gig.features = features\r\n            this.setState(prevState => {\r\n                return {\r\n                    gig: {\r\n                        ...prevState.gig,\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    addFeature = (ev) => {\r\n        ev.preventDefault()\r\n        const packages = [...this.state.gig.packages]\r\n        const currFeature = ev.target.value\r\n        if (ev.keyCode == 13) {\r\n            packages[0].features[this.featureIdx] = currFeature\r\n            this.setState(prevState => {\r\n                return {\r\n                    gig: {\r\n                        ...prevState.gig,\r\n                        packages\r\n                    },\r\n                    currFeature: ''\r\n                }\r\n            })\r\n            this.featureIdx += 1\r\n            this.state.gig.packages[0].features[this.featureIdx] = ''\r\n\r\n            return\r\n        }\r\n        this.setState(prevState => {\r\n            return {\r\n                ...prevState, currFeature\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { gig } = this.state\r\n        const { packages } = gig\r\n        if (!packages) return <div>loading</div>\r\n        return (\r\n            <section className=\"gig-edit main-layout\">\r\n                <form className=\"flex column justify-center\">\r\n                    <h4>Edit title</h4>\r\n                    <textarea name=\"title\" autoFocus rows=\"2\" cols=\"60\" type=\"text\" placeholder=\"Enter Gig Title...\" value={gig.title} onChange={this.handleInput} required autoComplete=\"off\" />\r\n                    <h4>Edit description</h4>\r\n                    <textarea name=\"desc\" rows=\"5\" cols=\"60\" type=\"text\" placeholder=\"Enter Gig Desc...\" value={gig.desc} onChange={this.handleInput} required autoComplete=\"off\" />\r\n                    <h4>Add label</h4>\r\n                    <select onChange={this.handleInput} name=\"tags\" required>\r\n                        <option value=\"graphic design\">Graphic design</option>\r\n                        <option value=\"minimalist\">Minimalist</option>\r\n                        <option value=\"flat\">Flat</option>\r\n                        <option value=\"modern\">Modern</option>\r\n                        <option value=\"book\">Book</option>\r\n                        <option value=\"logo design\">Logo design</option>\r\n                        <option value=\"cover\">Cover</option>\r\n                    </select>\r\n                    <h4>Package</h4>\r\n                    <textarea name=\"desc\" rows=\"3\" cols=\"60\"\r\n                        value={gig.packages[0].desc}\r\n                        type=\"text\" placeholder=\"Enter package Desc...\"\r\n                        onChange={this.handlePackagesInputs}\r\n                        required autoComplete=\"off\" />\r\n                    <h4>Add some package features</h4>\r\n                    <div className=\"package-features flex\">\r\n                        <input type=\"text\" name=\"feature\" placeholder=\"ex: responsive design, multi-language\"\r\n                            value={this.state.currFeature} onChange={this.addFeature} onKeyUp={this.addFeature} />\r\n                        <ul className=\"clean-list flex\">\r\n                            {gig.packages[0].features.map(feature => {\r\n                                if (feature.length > 0) return <li key={feature}>{feature}</li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    <h4>Package additional details</h4>\r\n                    <input type=\"number\" name=\"price\" placeholder=\"Package price\"\r\n                        value={gig.packages[0].price} onChange={this.handlePackagesInputs} required autoComplete=\"off\" />\r\n                    <input type=\"number\" name=\"revisionCount\" placeholder=\"Revision Count...\"\r\n                        value={gig.packages[0].revisionCount} onChange={this.handlePackagesInputs} required autoComplete=\"off\" />\r\n                    <input type=\"number\" name=\"deliveryDays\" placeholder=\"Days to deliver...\"\r\n                        value={gig.packages[0].deliveryDays} onChange={this.handlePackagesInputs} required autoComplete=\"off\" />\r\n                </form>\r\n                <div>\r\n                    <button className=\"gig-save\" onClick={this.onSaveNewGig} >Save</button>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        gigs: state.gigModule.gigs,\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addGig,\r\n}\r\n\r\nexport const GigEdit = connect(mapStateToProps, mapDispatchToProps)(_GigEdit)","C:\\dev\\finalSprint\\sixerr\\src\\pages\\Profile.jsx",["190"],"import React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { updateUser, onImageChange } from \"../store/actions/userActions.js\";\r\nimport { loadGigs, loadGig } from \"../store/actions/gigActions.js\";\r\nimport { GigList } from '../cmps/GigList.jsx';\r\nimport { EditableElement } from '../cmps/EditableElement.jsx';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\n\r\nclass _Profile extends React.Component {\r\n\r\n    state = {\r\n        from: 'IL',\r\n        memberSince: '2021',\r\n        lastViewed: [],\r\n        suggestedGigs: [],\r\n        favoriteGigs: []\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadGigs()\r\n        let lastViewed \r\n        console.log(this.props.user)\r\n        if (this.props.user.viewedGigIds) {\r\n            const prmGigsViewed = this.props.user.viewedGigIds.map(viewedGigId => loadGig(viewedGigId))\r\n            lastViewed = await Promise.all(prmGigsViewed)\r\n        } else lastViewed = []\r\n        let favoriteGigs\r\n        if (this.props.user.favoriteIds) {\r\n            const prmGigsFav = this.props.user.favoriteIds.map(favoriteId => loadGig(favoriteId))\r\n            favoriteGigs = await Promise.all(prmGigsFav)\r\n        } else favoriteGigs = []\r\n        this.setState(prevState =>\r\n        ({\r\n            ...prevState,\r\n            suggestedGigs: this.props.gigs.filter((gig, idx) => !(idx % 3)),\r\n            lastViewed,\r\n            favoriteGigs\r\n        }))\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const value = target.innerText\r\n        this.setState(prevState => ({ ...prevState, fullname: value }))\r\n    }\r\n\r\n    onUploadImg = (ev) => {\r\n        this.props.onImageChange(ev)\r\n    }\r\n\r\n    onSave = (field, value) => {\r\n        const user = { ...this.props.user }\r\n        user[field] = value\r\n        this.props.updateUser(user)\r\n    }\r\n\r\n    onFavoriteToggle = (ev, gigId) => { \r\n        ev.stopPropagation()\r\n        const user = {...this.props.user}\r\n        if (user.favoriteIds) {\r\n            if (user.favoriteIds.find(favoriteId => favoriteId === gigId)) user.favoriteIds = user.favoriteIds.filter(favoriteId => favoriteId !== gigId)\r\n            else user.favoriteIds.push(gigId)\r\n        } else user.favoriteIds = [gigId]\r\n        console.log('user.favoriteIds profile',user.favoriteIds)\r\n        this.props.updateUser(user)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { from, memberSince, lastViewed, suggestedGigs, favoriteGigs } = this.state\r\n        const { user } = this.props\r\n        console.log(user)\r\n        if (!user) return <div>Loading...</div>\r\n        return (\r\n            <section className=\"profile main-layout mrg-top\">\r\n                <div className=\"flex\">\r\n                    <div className=\"about-user flex column\">\r\n                        <label className=\"img-upload pointer\" htmlFor=\"uploadImg\">\r\n                            <img src={user.imgUrl} />\r\n                            <input onChange={this.onUploadImg} type=\"file\" id=\"uploadImg\" hidden />\r\n                            <PhotoCameraIcon className=\"camera-icon\"/>\r\n                        </label>\r\n                        <EditableElement field={'fullname'} save={this.onSave} type={'h1'} text={user.fullname} />\r\n\r\n                        <p>From {from}</p>\r\n                        <p>Member since {memberSince}</p>\r\n                        <button>Send Message</button>\r\n                    </div>\r\n                {lastViewed.length !== 0 &&\r\n                    <div className=\"recently-viewed flex column\">\r\n                        <h1>Last viewed</h1>\r\n                        <GigList gigs={lastViewed} onDelete={this.onDelete} onUserViewGig={() => { }} onFavoriteToggle={this.onFavoriteToggle} user={user}/>\r\n                    </div>}\r\n                </div>\r\n                <h1>Favorites</h1>\r\n                <GigList gigs={favoriteGigs} onDelete={this.onDelete} onUserViewGig={() => { }} onFavoriteToggle={this.onFavoriteToggle} user={user}/>\r\n                <h1>Suggested</h1>\r\n                <GigList gigs={suggestedGigs} onDelete={this.onDelete} onUserViewGig={() => { }} onFavoriteToggle={this.onFavoriteToggle} user={user} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapGlobalStateToProps = (state) => {\r\n    return {\r\n        user: state.userModule.user,\r\n        gigs: state.gigModule.gigs,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onImageChange,\r\n    updateUser,\r\n    loadGigs\r\n}\r\n\r\nexport const Profile = connect(mapGlobalStateToProps, mapDispatchToProps)(_Profile)\r\n\r\n\r\n","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SideBar.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\PackageList.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigAddReview.jsx",["191"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../services/utilService.js'\r\nimport { addGig, updateGig, loadGig } from '../store/actions/gigActions'\r\nimport StarIcon from '@material-ui/icons/Star';\r\n// import Rating from '../cmps/HoverRating.jsx'\r\nimport { HoverRating } from '../cmps/HoverRating.jsx'\r\n// import setValue from '../cmps/HoverRating.jsx'\r\n// import Rating from '@material-ui/lab/Rating';\r\n// import {HalfRating} from './HoverRating.jsx'\r\n\r\nclass _GigAddReview extends Component {\r\n\r\n\r\n    state = {\r\n        gig: null,\r\n        user: null,\r\n        review: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { gig } = this.props\r\n        const { user } = this.props\r\n        const review = this.createReviewTemplate(gig, user)\r\n        this.setState({ gig, user, review })\r\n    }\r\n\r\n    createReviewTemplate = (gig, user) => {\r\n        const by = { _id: user._id, fullname: user.fullname, imgUrl: user.imgUrl }\r\n        const id = utilService.makeId()\r\n        const review = { id, rating: '', txt: '', createdAt: null, purchasedAt: null, seller: gig.owner, by }\r\n        return review\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState(prevState => {\r\n            return {\r\n                review: {\r\n                    ...prevState.review,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n    handleRate = (rate) => {\r\n        const { review } = { ...this.state }\r\n        review.rating = rate\r\n        this.setState({ review })\r\n    }\r\n\r\n    onAddReview = () => {\r\n        const { review } = this.state\r\n        const { gig } = this.state\r\n        let reviewToAdd = { ...review }\r\n        // todo: add purchase date when we have data\r\n        const purchasedAt = \"purchase At\"\r\n        const date = Date.now()\r\n        reviewToAdd.createdAt = date\r\n        reviewToAdd.purchasedAt = purchasedAt\r\n        gig.reviews.unshift(reviewToAdd)\r\n        this.props.updateGig(gig).then(() => {\r\n            this.setState({review:null})\r\n            console.log('review added succefully')\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const {review } = this.state\r\n        if(!review) return <div></div>\r\n        return (\r\n            <>\r\n                 <HoverRating className=\"stars-rate\" handleRate={this.handleRate} val={review.rating} />\r\n                <textarea rows=\"6\" cols=\"60\" type=\"text\" name=\"txt\" placeholder='enter review...' value={review.txt}  onChange={this.handleChange} required />\r\n                <button className=\"add-review\" onClick={() => this.onAddReview()}>Add Review</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        gigs: state.gigModule.gigs,\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addGig,\r\n    updateGig,\r\n    loadGig,\r\n}\r\n\r\nexport const GigAddReview = connect(mapStateToProps, mapDispatchToProps)(_GigAddReview)","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\EditableElement.jsx",["192"],"import React from 'react'\r\nimport ContentEditable from 'react-contenteditable'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nexport class EditableElement extends React.Component {\r\n    state = {\r\n        editable: false,\r\n        html: this.props.text\r\n    }\r\n    contentEditable = React.createRef();\r\n\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n    }\r\n\r\n    handleChange = evt => {\r\n        this.setState({ ...this.state, html: evt.target.value });\r\n    };\r\n\r\n    toggleEditable = () => {\r\n        this.setState({\r\n            ...this.state, editable: !this.state.editable\r\n        },\r\n            () => {\r\n                if (this.state.editable) this.contentEditable.current.focus()\r\n            })\r\n    }\r\n\r\n    onStartEdit = () => {\r\n        this.toggleEditable()\r\n    }\r\n\r\n    onSaveElement = () => {\r\n        this.props.save(this.props.field, this.contentEditable.current.innerText)\r\n        this.toggleEditable()\r\n    }\r\n\r\n    render = () => {\r\n        const { editable } = this.state\r\n        const editableStyle = (editable) ? { border: '1px solid #888' } : {}\r\n        return (\r\n            <div className=\"content-edit-wrapper flex space-around align-center\">\r\n                <ContentEditable\r\n                    innerRef={this.contentEditable}\r\n                    html={this.state.html} // innerHTML of the editable div\r\n                    disabled={!this.state.editable}       // use true to disable editing\r\n                    onChange={this.handleChange} // handle innerHTML change\r\n                    tagName={this.props.type} // Use a custom HTML tag (uses a div by default)\r\n                    className=\"content-editable\"\r\n                    style={editableStyle}\r\n                />\r\n                <div className=\"action-buttons\">\r\n                    {!editable && <EditIcon className=\"action-button\" onClick={this.onStartEdit} />}\r\n                    {editable && <DoneIcon className=\"action-button\" onClick={this.onSaveElement} />}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction EditButton(props) {\r\n    return (\r\n        <button\r\n            key={props.cmd}\r\n            onMouseDown={evt => {\r\n                evt.preventDefault(); // Avoids loosing focus from the editable area\r\n                document.execCommand(props.cmd, false, props.arg); // Send the command to the browser\r\n            }}\r\n        >\r\n            {props.name || props.cmd}\r\n        </button>\r\n    );\r\n}","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ReviewList.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ImgGallery.jsx",["193","194","195"],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ShortReviewList.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ReviewStats.jsx",["196"],"import StarRateIcon from '@material-ui/icons/StarRate';\r\n\r\n\r\nexport function ReviewStats() {\r\n    //calculate real stats later!!\r\n    const avg = `${200}px`\r\n    return (\r\n        <section className=\"review-stats-container\" >\r\n            <div className=\"flex space-between\">\r\n                <div className=\"flex\">\r\n                    <h2>29 Reviews</h2>\r\n                    <StarRateIcon />\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <h3>Sort By</h3>\r\n                    <button>Most Relevant</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex\">\r\n                <div>\r\n                    <div className=\"flex\">\r\n                        <span>5 Stars</span>\r\n                        <StarRateIcon />\r\n                        <div className=\"progress-bar-container\">\r\n                            <div className=\"fit-progressbar-background\" style={{ backgroundColor: 'orange', width:`${90}%`}} > \r\n                            <span></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","C:\\dev\\finalSprint\\sixerr\\src\\store\\actions\\userActions.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\actions\\gigActions.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\pages\\Login.jsx",["197"],"import { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { login, logout, addUser } from \"../store/actions/userActions.js\"\r\n\r\nclass _Login extends Component {\r\n\r\n    state = {\r\n        msg: '',\r\n        isSignUp: false,\r\n        loginCred: {\r\n            username: '',\r\n            password: ''\r\n        },\r\n        signupCred: {\r\n            username: '',\r\n            password: '',\r\n            fullname: ''\r\n        }\r\n    }\r\n\r\n    // componentDidMount () {\r\n\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        this.setState(\r\n            {\r\n                loginCred: { username: '', password: '' }\r\n            })\r\n    }\r\n\r\n    loginHandleChange = ev => {\r\n        const { name, value } = ev.target\r\n        this.setState(prevState => ({\r\n            loginCred: {\r\n                ...prevState.loginCred,\r\n                [name]: value\r\n            }\r\n        }))\r\n    }\r\n\r\n    signupHandleChange = ev => {\r\n        const { name, value } = ev.target\r\n        this.setState(prevState => ({\r\n            signupCred: {\r\n                ...prevState.signupCred,\r\n                [name]: value\r\n            }\r\n        }))\r\n    }\r\n\r\n    toggleIsNewUser = (ev) => {\r\n        ev.stopPropagation()\r\n        this.setState({ isSignUp: !this.state.isSignUp })\r\n    }\r\n\r\n    captureModalClick = (ev) => {\r\n        ev.stopPropagation()\r\n    }\r\n\r\n    doLogin = async ev => {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        const userCreds = this.state.loginCred\r\n        if (!userCreds.username || !userCreds.password) {\r\n            return this.setState({ loginCred: { username: '', password: '' }, msg: 'Please enter user/password' })\r\n        }\r\n        try {\r\n            await this.props.login(userCreds)\r\n            this.props.toggleLogin()\r\n\r\n        } catch (err) {\r\n            console.log('ERR', err)\r\n            this.setState(prevState => ({\r\n                loginCred: {\r\n                    ...prevState.loginCred,\r\n                    password: ''\r\n                },\r\n                msg: 'Wrong username or password'\r\n            }))\r\n        }\r\n    }\r\n\r\n    doLogout = () => {\r\n        this.props.logout()\r\n    }\r\n\r\n    doSignup = async ev => {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        const { username, password, fullname } = this.state.signupCred\r\n\r\n        if (!username || !password || !fullname) {\r\n            return this.setState({ msg: 'All inputs are required' })\r\n        }\r\n        try {\r\n            await this.props.addUser({ username, password, fullname })\r\n            this.props.toggleLogin()\r\n        }\r\n        catch (err) {\r\n            console.log('ERR', err)\r\n            this.setState(prevState => ({\r\n                signupCred: {\r\n                    ...prevState.signupCred,\r\n                    password: ''\r\n                },\r\n                msg: 'Could not sign up please try again'\r\n            }))\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const loggedInUser = this.props.user //TODO pay attention later \r\n        const { isSignUp, msg } = this.state\r\n\r\n        let signupSection = (\r\n            <>\r\n                <h1>Join Sixerr</h1>\r\n                <form className=\"frm\" onSubmit={this.doSignup}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"fullname\"\r\n                        value={this.state.signupCred.fullname}\r\n                        onChange={this.signupHandleChange}\r\n                        placeholder=\"Full name\"\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={this.state.signupCred.username}\r\n                        onChange={this.signupHandleChange}\r\n                        placeholder=\"Username\"\r\n                    />\r\n                    <input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={this.state.signupCred.password}\r\n                        onChange={this.signupHandleChange}\r\n                        placeholder=\"Password\"\r\n                    />\r\n                    <button>Continue</button>\r\n                    <hr />\r\n                    <h4>Already a member? <span onClick={this.toggleIsNewUser}>Sign In</span></h4>\r\n                </form>\r\n            </>\r\n        )\r\n        let loginSection = (\r\n            <>\r\n                <h1>Sign In to Sixerr</h1>\r\n                <form className=\"frm\" onSubmit={this.doLogin}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={this.state.loginCred.username}\r\n                        onChange={this.loginHandleChange}\r\n                        placeholder=\"Username\"\r\n                        autoFocus\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={this.state.loginCred.password}\r\n                        onChange={this.loginHandleChange}\r\n                        placeholder=\"Password\"\r\n                    />\r\n                    <br />\r\n                    <button className=\"rounded\">Continue</button>\r\n                    <hr />\r\n                    <h4>Not a member yet? <span onClick={this.toggleIsNewUser}>Join Now</span></h4>\r\n                </form>\r\n            </>\r\n        )\r\n\r\n\r\n        return (\r\n            <div className=\"main-screen\" onClick={this.props.toggleLogin}>\r\n                <div className=\"login main-layout shadow rounded\" onClick={this.captureModalClick}>\r\n                    {msg && <p>{msg}</p>}\r\n                    {/* {loggedInUser && (\r\n                        <div>\r\n                            <h3>\r\n                                Welcome {loggedInUser.fullname}\r\n                                <button onClick={this.doLogout}>Logout</button>\r\n                            </h3>\r\n                        </div>\r\n                    )} */}\r\n                    {isSignUp && signupSection}\r\n                    {!isSignUp && loginSection}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    logout,\r\n    addUser,\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)\r\n\r\n\r\n\r\n\r\n","C:\\dev\\finalSprint\\sixerr\\src\\services\\gigService.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\services\\utilService.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigList.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\HoverRating.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ReviewPreview.jsx",["198","199","200","201","202","203"],"import React from 'react'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\n// var FontAwesome = require('react-fontawesome')\r\n\r\n\r\nimport {\r\n    IconFlagTR,\r\n    IconFlagDE,\r\n    IconFlagUS,\r\n    IconFlagIS,\r\n\r\n} from 'material-ui-flags';\r\n\r\n\r\nexport function ReviewPreview({ review, user }) {\r\n    if (!review || !review.by) return <div></div>\r\n    return (\r\n        <>\r\n        \r\n            <section className=\"review-card flex\">\r\n                <div>\r\n                    <div className=\"avatar-container\">\r\n                        <Avatar src={review.by.imgUrl} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"review-info\">\r\n                    <h5>{review.by.fullname}</h5>\r\n                    <div className=\"country\">\r\n                        {/* <IconButton className=\"country-icon\"><IconFlagUS />United States</IconButton> */}\r\n                        <IconFlagUS />\r\n                        <span>united states</span>\r\n                        <StarRateIcon className=\"star\" />\r\n                        <span className=\"rating\">{review.rating}</span>\r\n                    </div>\r\n                    {/* todo : add country and flags */}\r\n                    <p>{review.txt}</p>\r\n                    <p className=\"published-at\">Published 20 Days Ago</p>\r\n                    <div className=\"icons flex\">\r\n                        {/* <ThumbUpAltIcon className=\"helpful\" /> */}\r\n                        <i class=\"far fa-thumbs-up\"></i>\r\n\r\n                        <span>Helpful</span>\r\n                        {/* <ThumbDownIcon className=\"thumb-down\" /> */}\r\n                        <i class=\"far fa-thumbs-down\"></i>\r\n                        <span>Thumb Down</span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {/* <p className=\"review-published-date\">Published 2 Days Ago</p> */}\r\n        </>\r\n    )\r\n}\r\n","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SellerPreview.jsx",["204","205"],"import Avatar from '@material-ui/core/Avatar';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\n\r\n\r\nexport function SellerPreview({ seller }) {\r\n    console.log(\"SellerPreview , seller\", seller)\r\n    return (\r\n        <>\r\n            <section className=\"about-seller-container flex column\">\r\n                <h2>About The Seller</h2>\r\n                <div className=\"flex\">\r\n                    <div className=\"seller-img-container\">\r\n                        <img src={seller.imgUrl} />\r\n                        {/* <Avatar src={`${seller.imgUrl}`} /> */}\r\n                    </div>\r\n                    <div className=\"flex column\">\r\n                        <span>{seller.fullname}</span>\r\n                        <span>Creator of AR filters</span>\r\n                        <div className=\"stars-container flex justify-center align center\">\r\n                            {/*todo: add real stars from data later */}\r\n                            <Rating name=\"disabled\" value={5} disabled />\r\n                            <span>5.0 (40 reviews)</span>\r\n                        </div>\r\n                        <button>Contact Me</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"seller-stats flex column\">\r\n                <div className=\"user-stats flex\">\r\n                    <div className=\"flex column\">\r\n                        <span>From</span>\r\n                        <span className=\"bold\">United States</span>\r\n                        <span>Avg. response time</span>\r\n                        <span className=\"bold\">3 hours</span>\r\n                    </div>\r\n                    <div className=\"flex column\">\r\n                        <span >Member since</span>\r\n                        <span className=\"bold\">Aug 2020</span>\r\n                        <span>Last deilivery</span>\r\n                        <span className=\"bold\">About 12 hours</span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Error, nihil. Temporibus quidem aperiam voluptates aliquid nostrum, ratione laboriosam commodi culpa eligendi? Autem cum corporis quia asperiores deleniti maiores consequuntur expedita?</p>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigImgLightBox.jsx",["206","207"],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SellerOverview.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\services\\cloudinaryService.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\services\\userService.js",["208"],"// import { storageService } from './asyncStorageService'\r\nimport { httpService } from './httpService'\r\nconst SCORE_FOR_REVIEW = 10\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser,\r\n}\r\n\r\nwindow.userService = userService\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    // return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    console.log('Service', user.favoriteIds )\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n    return user\r\n}\r\n\r\nasync function login(userCred) {\r\n    const users = await httpService.get('user')\r\n    const user = users.find(user => user.username === userCred.username && user.password === userCred.password)\r\n    if (user) {\r\n        console.log('Found user')\r\n        return _saveLocalUser(user)\r\n    }\r\n    else throw new Error('no user')\r\n    // const user = await httpService.post('auth/login', userCred)\r\n    // if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    const user = await httpService.post('user', userCred)\r\n    // const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return\r\n    // return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\n","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\PackagePreview.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ShortReviewPreview.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\services\\httpService.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigPreview.jsx",["209"],"import { Link } from 'react-router-dom'\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nexport function GigPreview({ gig, onUserViewGig, onFavoriteToggle, user}) {\r\n    return (\r\n        <li onClick={() => { onUserViewGig(gig._id) }} className=\"preview-item mrg-bottom\">\r\n            <div className=\"preview-inner\">\r\n                <Link to={`/gig/${gig._id}`}>\r\n                    <div className=\"preview-top\">\r\n                        <img src={gig.imgUrls[0]} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"preview-center\">\r\n                        <h2>{gig.title}</h2>\r\n                        <div className=\"gig-rating flex align-center\">\r\n                            <StarIcon />\r\n                            <span>{_getRandomRating()}</span>\r\n                        </div>\r\n                        <Link to=\"/profile\">\r\n                            <div className=\"gig-owner\">\r\n                                <p>{gig.owner.fullname}</p>\r\n                                <p>Level 3 seller</p>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                </Link>\r\n                <div className=\"preview-bottom flex space-between\">\r\n                    <Favorite onClick={(ev)=>{onFavoriteToggle(ev, gig._id)}} className={`heart pointer ${_isLiked(user?.favoriteIds, gig._id)}`} />\r\n                    <h3>Starting at <span>{gig.packages[0].price}$</span></h3>\r\n                </div>\r\n            </div>\r\n        </li >\r\n    )\r\n}\r\n\r\nfunction _getRandomRating() {\r\n    return Math.round(Math.random() * 30 + 20) /10\r\n}\r\n\r\nfunction _getRandomLike() {\r\n    return (Math.random()  > 0.75) ? 'liked' : ''\r\n}\r\n\r\nfunction _isLiked (favoriteIds, gigId) {\r\n    if (!favoriteIds) return ''\r\n    return favoriteIds.find(favoriteId => favoriteId === gigId)? 'liked' : ''\r\n}","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\Carousel.jsx",["210"],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":5,"column":10,"nodeType":"217","messageId":"218","endLine":5,"endColumn":14},{"ruleId":"219","severity":1,"message":"220","line":51,"column":42,"nodeType":"221","endLine":51,"endColumn":67},{"ruleId":"215","severity":1,"message":"222","line":6,"column":7,"nodeType":"217","messageId":"218","endLine":6,"endColumn":12},{"ruleId":"215","severity":1,"message":"223","line":4,"column":10,"nodeType":"217","messageId":"218","endLine":4,"endColumn":21},{"ruleId":"215","severity":1,"message":"224","line":16,"column":10,"nodeType":"217","messageId":"218","endLine":16,"endColumn":21},{"ruleId":"225","severity":1,"message":"226","line":83,"column":32,"nodeType":"227","messageId":"228","endLine":83,"endColumn":34},{"ruleId":"215","severity":1,"message":"229","line":4,"column":10,"nodeType":"217","messageId":"218","endLine":4,"endColumn":15},{"ruleId":"215","severity":1,"message":"230","line":1,"column":10,"nodeType":"217","messageId":"218","endLine":1,"endColumn":18},{"ruleId":"225","severity":1,"message":"226","line":121,"column":24,"nodeType":"227","messageId":"228","endLine":121,"endColumn":26},{"ruleId":"231","severity":1,"message":"232","line":133,"column":13,"nodeType":"233","endLine":133,"endColumn":48},{"ruleId":"234","severity":1,"message":"235","line":176,"column":67,"nodeType":"236","messageId":"237","endLine":176,"endColumn":69},{"ruleId":"219","severity":1,"message":"220","line":81,"column":29,"nodeType":"221","endLine":81,"endColumn":54},{"ruleId":"215","severity":1,"message":"238","line":5,"column":8,"nodeType":"217","messageId":"218","endLine":5,"endColumn":16},{"ruleId":"215","severity":1,"message":"239","line":62,"column":10,"nodeType":"217","messageId":"218","endLine":62,"endColumn":20},{"ruleId":"215","severity":1,"message":"240","line":3,"column":10,"nodeType":"217","messageId":"218","endLine":3,"endColumn":22},{"ruleId":"219","severity":1,"message":"220","line":11,"column":17,"nodeType":"221","endLine":11,"endColumn":57},{"ruleId":"219","severity":1,"message":"220","line":21,"column":29,"nodeType":"221","endLine":21,"endColumn":49},{"ruleId":"215","severity":1,"message":"241","line":6,"column":11,"nodeType":"217","messageId":"218","endLine":6,"endColumn":14},{"ruleId":"215","severity":1,"message":"242","line":115,"column":15,"nodeType":"217","messageId":"218","endLine":115,"endColumn":27},{"ruleId":"215","severity":1,"message":"243","line":3,"column":8,"nodeType":"217","messageId":"218","endLine":3,"endColumn":18},{"ruleId":"215","severity":1,"message":"244","line":4,"column":8,"nodeType":"217","messageId":"218","endLine":4,"endColumn":22},{"ruleId":"215","severity":1,"message":"245","line":5,"column":8,"nodeType":"217","messageId":"218","endLine":5,"endColumn":21},{"ruleId":"215","severity":1,"message":"246","line":11,"column":5,"nodeType":"217","messageId":"218","endLine":11,"endColumn":15},{"ruleId":"215","severity":1,"message":"247","line":12,"column":5,"nodeType":"217","messageId":"218","endLine":12,"endColumn":15},{"ruleId":"215","severity":1,"message":"248","line":14,"column":5,"nodeType":"217","messageId":"218","endLine":14,"endColumn":15},{"ruleId":"215","severity":1,"message":"249","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":14},{"ruleId":"219","severity":1,"message":"220","line":14,"column":25,"nodeType":"221","endLine":14,"endColumn":52},{"ruleId":"215","severity":1,"message":"240","line":5,"column":10,"nodeType":"217","messageId":"218","endLine":5,"endColumn":22},{"ruleId":"219","severity":1,"message":"220","line":11,"column":17,"nodeType":"221","endLine":11,"endColumn":38},{"ruleId":"215","severity":1,"message":"250","line":3,"column":7,"nodeType":"217","messageId":"218","endLine":3,"endColumn":23},{"ruleId":"215","severity":1,"message":"251","line":40,"column":10,"nodeType":"217","messageId":"218","endLine":40,"endColumn":24},{"ruleId":"219","severity":1,"message":"220","line":29,"column":20,"nodeType":"221","endLine":29,"endColumn":55},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"no-unused-vars","'Hero' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'heros' is assigned a value but never used.","'PackageList' is defined but never used.","'ReviewStats' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Login' is defined but never used.","'loadGigs' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'StarIcon' is defined but never used.","'EditButton' is defined but never used.","'CarouselImgs' is defined but never used.","'avg' is assigned a value but never used.","'loggedInUser' is assigned a value but never used.","'IconButton' is defined but never used.","'ThumbUpAltIcon' is defined but never used.","'ThumbDownIcon' is defined but never used.","'IconFlagTR' is defined but never used.","'IconFlagDE' is defined but never used.","'IconFlagIS' is defined but never used.","'Avatar' is defined but never used.","'SCORE_FOR_REVIEW' is assigned a value but never used.","'_getRandomLike' is defined but never used.","no-global-assign","no-unsafe-negation"]