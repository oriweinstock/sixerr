[{"C:\\dev\\finalSprint\\sixerr\\src\\index.js":"1","C:\\dev\\finalSprint\\sixerr\\src\\App.jsx":"2","C:\\dev\\finalSprint\\sixerr\\src\\store\\store.js":"3","C:\\dev\\finalSprint\\sixerr\\src\\serviceWorkerRegistration.js":"4","C:\\dev\\finalSprint\\sixerr\\src\\reportWebVitals.js":"5","C:\\dev\\finalSprint\\sixerr\\src\\store\\reducers\\gigReducer.js":"6","C:\\dev\\finalSprint\\sixerr\\src\\store\\reducers\\userReducer.js":"7","C:\\dev\\finalSprint\\sixerr\\src\\routes.js":"8","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\AppHeader.jsx":"9","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\Hero.jsx":"10","C:\\dev\\finalSprint\\sixerr\\src\\pages\\SixerrApp.jsx":"11","C:\\dev\\finalSprint\\sixerr\\src\\pages\\GigDetails.jsx":"12","C:\\dev\\finalSprint\\sixerr\\src\\pages\\GigEdit.jsx":"13","C:\\dev\\finalSprint\\sixerr\\src\\pages\\Profile.jsx":"14","C:\\dev\\finalSprint\\sixerr\\src\\pages\\Login.jsx":"15","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigAddReview.jsx":"16","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\PackageList.jsx":"17","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SideBar.jsx":"18","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ReviewList.jsx":"19","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\EditableElement.jsx":"20","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ReviewStats.jsx":"21","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ShortReviewList.jsx":"22","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\Carousel.jsx":"23","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ImgGallery.jsx":"24","C:\\dev\\finalSprint\\sixerr\\src\\store\\actions\\userActions.js":"25","C:\\dev\\finalSprint\\sixerr\\src\\services\\gigService.js":"26","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigList.jsx":"27","C:\\dev\\finalSprint\\sixerr\\src\\store\\actions\\gigActions.js":"28","C:\\dev\\finalSprint\\sixerr\\src\\services\\utilService.js":"29","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ReviewPreview.jsx":"30","C:\\dev\\finalSprint\\sixerr\\src\\services\\userService.js":"31","C:\\dev\\finalSprint\\sixerr\\src\\services\\cloudinaryService.js":"32","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\HoverRating.jsx":"33","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SellerPreview.jsx":"34","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SellerOverview.jsx":"35","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigImgLightBox.jsx":"36","C:\\dev\\finalSprint\\sixerr\\src\\services\\httpService.js":"37","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\PackagePreview.jsx":"38","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ShortReviewPreview.jsx":"39","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigPreview.jsx":"40","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\DetailsNav.jsx":"41","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\WindowSize.jsx":"42","C:\\dev\\finalSprint\\sixerr\\src\\store\\reducers\\orderReducer.js":"43","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigStrip.jsx":"44","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\OrderList.jsx":"45","C:\\dev\\finalSprint\\sixerr\\src\\store\\actions\\orderActions.js":"46","C:\\dev\\finalSprint\\sixerr\\src\\services\\orderService.js":"47","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\OrderPreview.jsx":"48","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\RichTextEditor.jsx":"49"},{"size":1073,"mtime":1610561408555,"results":"50","hashOfConfig":"51"},{"size":618,"mtime":1610871918283,"results":"52","hashOfConfig":"51"},{"size":600,"mtime":1611050440134,"results":"53","hashOfConfig":"51"},{"size":5201,"mtime":1610547361097,"results":"54","hashOfConfig":"51"},{"size":377,"mtime":1610547361095,"results":"55","hashOfConfig":"51"},{"size":831,"mtime":1610871918295,"results":"56","hashOfConfig":"51"},{"size":479,"mtime":1610618978671,"results":"57","hashOfConfig":"51"},{"size":693,"mtime":1610747748129,"results":"58","hashOfConfig":"51"},{"size":2510,"mtime":1611050440116,"results":"59","hashOfConfig":"51"},{"size":2955,"mtime":1611050440121,"results":"60","hashOfConfig":"51"},{"size":2423,"mtime":1611050440127,"results":"61","hashOfConfig":"51"},{"size":12301,"mtime":1611098717984,"results":"62","hashOfConfig":"51"},{"size":10676,"mtime":1611051107764,"results":"63","hashOfConfig":"51"},{"size":5898,"mtime":1611050440126,"results":"64","hashOfConfig":"51"},{"size":6482,"mtime":1610834936432,"results":"65","hashOfConfig":"51"},{"size":3202,"mtime":1611094903826,"results":"66","hashOfConfig":"51"},{"size":348,"mtime":1610898395196,"results":"67","hashOfConfig":"51"},{"size":2049,"mtime":1611051896175,"results":"68","hashOfConfig":"51"},{"size":480,"mtime":1610980401931,"results":"69","hashOfConfig":"51"},{"size":2516,"mtime":1610871918288,"results":"70","hashOfConfig":"51"},{"size":5467,"mtime":1611087219767,"results":"71","hashOfConfig":"51"},{"size":679,"mtime":1611048151147,"results":"72","hashOfConfig":"51"},{"size":1220,"mtime":1610929597377,"results":"73","hashOfConfig":"51"},{"size":1174,"mtime":1611048700791,"results":"74","hashOfConfig":"51"},{"size":1645,"mtime":1610834936434,"results":"75","hashOfConfig":"51"},{"size":770,"mtime":1610564258615,"results":"76","hashOfConfig":"51"},{"size":485,"mtime":1610961964861,"results":"77","hashOfConfig":"51"},{"size":1650,"mtime":1611050440130,"results":"78","hashOfConfig":"51"},{"size":1670,"mtime":1610713989761,"results":"79","hashOfConfig":"51"},{"size":2222,"mtime":1611048432805,"results":"80","hashOfConfig":"51"},{"size":2288,"mtime":1610888041096,"results":"81","hashOfConfig":"51"},{"size":653,"mtime":1610713989759,"results":"82","hashOfConfig":"51"},{"size":1239,"mtime":1610962069306,"results":"83","hashOfConfig":"51"},{"size":4372,"mtime":1611088010704,"results":"84","hashOfConfig":"51"},{"size":1702,"mtime":1611000515049,"results":"85","hashOfConfig":"51"},{"size":933,"mtime":1611048260203,"results":"86","hashOfConfig":"51"},{"size":1077,"mtime":1610561408561,"results":"87","hashOfConfig":"51"},{"size":162,"mtime":1610826226200,"results":"88","hashOfConfig":"51"},{"size":1757,"mtime":1610990361973,"results":"89","hashOfConfig":"51"},{"size":2296,"mtime":1611050440117,"results":"90","hashOfConfig":"51"},{"size":525,"mtime":1610981863362,"results":"91","hashOfConfig":"51"},{"size":807,"mtime":1610996570370,"results":"92","hashOfConfig":"51"},{"size":853,"mtime":1611050440133,"results":"93","hashOfConfig":"51"},{"size":1730,"mtime":1611050440119,"results":"94","hashOfConfig":"51"},{"size":400,"mtime":1611050440122,"results":"95","hashOfConfig":"51"},{"size":838,"mtime":1611050440131,"results":"96","hashOfConfig":"51"},{"size":1330,"mtime":1611050440129,"results":"97","hashOfConfig":"51"},{"size":905,"mtime":1611050440123,"results":"98","hashOfConfig":"51"},{"size":9189,"mtime":1611075688813,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1xwmuwb",{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"102"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"102"},"C:\\dev\\finalSprint\\sixerr\\src\\index.js",[],["216","217"],"C:\\dev\\finalSprint\\sixerr\\src\\App.jsx",["218"],"import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport './assets/styles/basics/styles.scss';\r\nimport { AppHeader } from './cmps/AppHeader';\r\nimport { Hero } from './cmps/Hero';\r\nimport { routes } from './routes';\r\n\r\nexport function App() {\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <header className=\"\">\r\n          <AppHeader />\r\n        </header>\r\n        <main>\r\n          <Switch>\r\n            {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n","C:\\dev\\finalSprint\\sixerr\\src\\store\\store.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\serviceWorkerRegistration.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\reportWebVitals.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\reducers\\gigReducer.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\reducers\\userReducer.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\routes.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\AppHeader.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\Hero.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\pages\\SixerrApp.jsx",["219","220"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { GigList } from '../cmps/GigList.jsx';\r\nimport { Login } from './Login.jsx'\r\nimport { loadGigs, setFilter, removeGig } from \"../store/actions/gigActions.js\";\r\nimport { updateUser } from \"../store/actions/userActions.js\";\r\nimport { GigStrip } from '../cmps/GigStrip.jsx';\r\n\r\n\r\nclass _SixerrApp extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadGigs()\r\n    }\r\n\r\n    onUserViewGig = (gigId) => {\r\n        const user = {...this.props.user}\r\n        if (user.viewedGigIds) {\r\n            if (!user.viewedGigIds.find(viewedGigId => viewedGigId === gigId)) user.viewedGigIds.push(gigId)\r\n        } else user.viewedGigIds = [gigId]\r\n        this.props.updateUser(user)\r\n    }\r\n\r\n    onDelete = () => { }\r\n    \r\n    onFavoriteToggle = (ev, gigId) => { \r\n        ev.stopPropagation()\r\n        const user = {...this.props.user}\r\n        if (user.favoriteIds) {\r\n            if (user.favoriteIds.find(favoriteId => favoriteId === gigId)) user.favoriteIds = user.favoriteIds.filter(favoriteId => favoriteId !== gigId)\r\n            else user.favoriteIds.push(gigId)\r\n        } else user.favoriteIds = [gigId]\r\n        console.log('user.favoriteIds',user.favoriteIds)\r\n        this.props.updateUser(user)\r\n    }\r\n\r\n    render() {\r\n        const {user} = this.props\r\n        if (user) console.log('user favorites', user.favoriteIds)\r\n        return (\r\n            <section className=\"sixerr-app main-layout\">\r\n                <div className=\"flex space-around align-center mrg-top mrg-bottom\">\r\n                    {/* <GigFilter /> */}\r\n                </div>\r\n                {/* <GigStrip gigs={this.props.gigs} onUserViewGig={this.onUserViewGig} onFavoriteToggle={this.onFavoriteToggle} user={this.props.user} onDelete={this.onDelete} /> */}\r\n                <GigList gigs={this.props.gigs} onUserViewGig={this.onUserViewGig} onFavoriteToggle={this.onFavoriteToggle} user={this.props.user} onDelete={this.onDelete} />\r\n            </section>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        gigs: state.gigModule.gigs,\r\n        filterBy: state.gigModule.filterBy,\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadGigs,\r\n    setFilter,\r\n    removeGig,\r\n    updateUser\r\n}\r\n\r\nexport const SixerrApp = connect(mapStateToProps, mapDispatchToProps)(_SixerrApp)\r\n","C:\\dev\\finalSprint\\sixerr\\src\\pages\\GigDetails.jsx",["221","222","223"],"C:\\dev\\finalSprint\\sixerr\\src\\pages\\GigEdit.jsx",["224"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { cloudinaryService } from '../services/cloudinaryService.js';\r\nimport { addGig } from '../store/actions/gigActions.js';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nclass _GigEdit extends Component {\r\n\r\n    state = {\r\n        gig: {\r\n            title: '',\r\n            desc: '',\r\n            packages: null,\r\n            tags: '',\r\n        },\r\n        currFeature: ''\r\n    }\r\n\r\n    featureIdx = 0\r\n\r\n    componentDidMount() {\r\n        const gig = this.createGigTemplate()\r\n        this.setState({ gig })\r\n    }\r\n\r\n    onSaveNewGig = (ev) => {\r\n        ev.preventDefault()\r\n        const { gig } = this.state\r\n        this.props.addGig(gig).then(() => {\r\n            this.props.history.push('/gig');\r\n        })\r\n    }\r\n\r\n    createTemplatePackages = () => {\r\n        return [{ type: 'basic', desc: '', price: 0, revisionCount: 0, deliveryDays: 0, features: [] }]\r\n    }\r\n\r\n    createGigTemplate = () => {\r\n        const { user } = this.props\r\n        const packages = this.createTemplatePackages()\r\n        const gig = {\r\n            title: \"\",\r\n            desc: \"\",\r\n            tags: [],\r\n            packages,\r\n            owner: user,\r\n            imgUrls: [\"https://fiverr-res.cloudinary.com/images/t_main1,q_auto,f_auto,q_auto,f_auto/gigs3/157536980/original/d7411fe67086a183a78e81950000dde20ee5b689/create-3d-model-and-render-your-sketch-or-2d-plan.jpg\",\r\n                \"https://fiverr-res.cloudinary.com/images/t_smartwm/t_main1,q_auto,f_auto,q_auto,f_auto/attachments/delivery/asset/d91dab5d590614ec0c36060db1ba1c67-1606486728/Stationery%202/do-a-minimalist-logo-business-card-and-stationery.jpg\",\r\n                \"https://fiverr-res.cloudinary.com/images/t_main1,q_auto,f_auto,q_auto,f_auto/gigs2/156162379/original/9087a56206fcc647d954fbe88c28fc61d673b936/create-luxury-geometric-patterns-and-background-for-you.png\"],\r\n            reviews: []\r\n        }\r\n        return gig\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const field = target.name\r\n        let value = target.value\r\n        if (field === 'tags') {\r\n            const tags = [value]\r\n            value = tags\r\n        }\r\n        this.setState(prevState => {\r\n            return {\r\n                gig: {\r\n                    ...prevState.gig,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n    \r\n    handlePackagesInputs = ({ target }) => {\r\n        const field = target.name\r\n        let value;\r\n        if (target.type === 'number') value = +target.value\r\n        else value = target.value\r\n        const { packages } = this.state.gig\r\n        const pack = { ...packages[0] }\r\n        pack[field] = value\r\n        packages[0] = { ...pack }\r\n        this.setState(prevState => {\r\n            return {\r\n                gig: {\r\n                    ...prevState.gig,\r\n                    packages\r\n\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    addFeature = (ev) => {\r\n        ev.preventDefault()\r\n        const packages = [...this.state.gig.packages]\r\n        const currFeature = ev.target.value\r\n        if (ev.keyCode === 13) {\r\n            packages[0].features[this.featureIdx] = currFeature\r\n            this.setState(prevState => {\r\n                return {\r\n                    gig: {\r\n                        ...prevState.gig,\r\n                        packages\r\n                    },\r\n                    currFeature: ''\r\n                }\r\n            })\r\n            this.featureIdx += 1\r\n        } else {\r\n            this.setState(prevState => {\r\n                return {\r\n                    ...prevState, currFeature\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    removeFeature = (featureToRemove) => {\r\n        const { features } = this.state.gig.packages[0]\r\n        const updatedFeatures = features.filter(feature => feature !== featureToRemove)\r\n        const packages = [...this.state.gig.packages]\r\n        packages[0].features = updatedFeatures\r\n\r\n        this.setState(prevState => {\r\n            return {\r\n                gig: {\r\n                    ...prevState.gig,\r\n                    packages\r\n                },\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    uploadImage = async (ev) => {\r\n        const data = await cloudinaryService.uploadImg(ev)\r\n        console.log(data)\r\n        const newUrl = data.secure_url;\r\n        const imgUrls = [...this.state.gig.imgUrls, newUrl]\r\n        this.setState(prevState => {\r\n            return {\r\n                gig: {\r\n                    ...prevState.gig,\r\n                    imgUrls\r\n                },\r\n            }\r\n        })\r\n    }\r\n\r\n    removeImage = (urlToRemove) => {\r\n        const { imgUrls } = this.state.gig\r\n        const updatedUrls = imgUrls.filter(url => url !== urlToRemove)\r\n        this.setState(prevState => {\r\n            return {\r\n                gig: {\r\n                    ...prevState.gig,\r\n                    imgUrls: updatedUrls\r\n                },\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { gig } = this.state\r\n\r\n        if (!gig.packages) return <div>loading</div>\r\n        return (\r\n            <section className=\"gig-edit main-layout\">\r\n                <form className=\"flex column justify-center\">\r\n                    <h4>Gig title</h4>\r\n                    <textarea name=\"title\" autoFocus rows=\"2\" cols=\"60\" type=\"text\" placeholder=\"Enter Gig Title...\" value={gig.title} onChange={this.handleInput} required autoComplete=\"off\" />\r\n                    <h4>Description</h4>\r\n                    <textarea name=\"desc\" rows=\"5\" cols=\"60\" type=\"text\" placeholder=\"Enter Gig Desc...\" value={gig.desc} onChange={this.handleInput} required autoComplete=\"off\" />\r\n                    <h4>Add label</h4>\r\n                    <select onChange={this.handleInput} name=\"tags\" required>\r\n                        <option value=\"graphic design\">Graphic design</option>\r\n                        <option value=\"minimalist\">Minimalist</option>\r\n                        <option value=\"flat\">Flat</option>\r\n                        <option value=\"modern\">Modern</option>\r\n                        <option value=\"book\">Book</option>\r\n                        <option value=\"logo design\">Logo design</option>\r\n                        <option value=\"cover\">Cover</option>\r\n                    </select>\r\n                    <h4>Package</h4>\r\n                    <textarea name=\"desc\" rows=\"3\" cols=\"60\"\r\n                        value={gig.packages[0].desc}\r\n                        type=\"text\" placeholder=\"Enter package Desc...\"\r\n                        onChange={this.handlePackagesInputs}\r\n                        required autoComplete=\"off\" />\r\n                    <h4>Add some package features</h4>\r\n                    <div className=\"package-features flex\">\r\n                        <input type=\"text\" name=\"feature\" placeholder=\"ex: responsive design, multi-language\"\r\n                            value={this.state.currFeature} onChange={this.addFeature} onKeyUp={this.addFeature} />\r\n                        <ul className=\"clean-list flex\">\r\n                            {gig.packages[0].features.map(feature => {\r\n                                if (feature.length > 0) return <li key={feature}>\r\n                                    {feature}\r\n                                    <ClearIcon className=\"clear-icon pointer\" onClick={() => this.removeFeature(feature)} />\r\n\r\n                                </li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"package-details\">\r\n                        <h4>Package additional details</h4>\r\n                        <div className=\"flex wrap\">\r\n                            <div className=\"flex wrap align-base\">\r\n                                <label htmlFor=\"price\">Price:</label>\r\n                                <input type=\"number\" name=\"price\" id=\"price\" placeholder=\"Package price\"\r\n                                    value={gig.packages[0].price} onChange={this.handlePackagesInputs} required autoComplete=\"off\" />\r\n                            </div>\r\n                            <div className=\"flex wrap align-base\">\r\n\r\n                                <label htmlFor=\"revisionCount\">Revisions:</label>\r\n                                <input type=\"number\" name=\"revisionCount\" id=\"revisionCount\" placeholder=\"Revision Count...\"\r\n                                    value={gig.packages[0].revisionCount} onChange={this.handlePackagesInputs} required autoComplete=\"off\" />\r\n                            </div>\r\n                            <div className=\"flex wrap align-base\">\r\n                                <label htmlFor=\"deliveryDays\">Delivery (days):</label>\r\n                                <input type=\"number\" name=\"deliveryDays\" id=\"deliveryDays\" placeholder=\"Days to deliver...\"\r\n                                    value={gig.packages[0].deliveryDays} onChange={this.handlePackagesInputs} required autoComplete=\"off\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"gig-edit-images\">\r\n                        <div className=\"flex\">\r\n                            <label className=\"img-upload pointer\" htmlFor=\"uploadImg\">\r\n                                <input onChange={this.uploadImage} type=\"file\" id=\"uploadImg\" hidden />\r\n                                <PhotoCameraIcon className=\"camera-icon\" />\r\n                            </label>\r\n                            <h4>Add some photos</h4>\r\n                        </div>\r\n                        <ul className=\"clean-list flex\">\r\n                            {gig.imgUrls.map(url => {\r\n                                return <li key={url} className=\"pointer\">\r\n                                    <img src={url} alt=\"\" />\r\n                                    <ClearIcon className=\"clear-icon\" onClick={() => this.removeImage(url)} />\r\n                                </li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n\r\n                </form>\r\n                <div>\r\n                    <button className=\"gig-save\" onClick={this.onSaveNewGig} >Save</button>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        gigs: state.gigModule.gigs,\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addGig,\r\n}\r\n\r\nexport const GigEdit = connect(mapStateToProps, mapDispatchToProps)(_GigEdit)","C:\\dev\\finalSprint\\sixerr\\src\\pages\\Profile.jsx",["225"],"import React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { updateUser, onImageChange } from \"../store/actions/userActions.js\";\r\nimport { loadGigs, getGigs } from \"../store/actions/gigActions.js\";\r\nimport { loadOrders, updateOrder } from \"../store/actions/orderActions.js\";\r\nimport { GigList } from '../cmps/GigList.jsx';\r\nimport { EditableElement } from '../cmps/EditableElement.jsx';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport { OrderList } from '../cmps/OrderList.jsx';\r\n\r\nclass _Profile extends React.Component {\r\n\r\n    state = {\r\n        from: 'IL',\r\n        memberSince: '2021',\r\n        lastViewed: [],\r\n        myGigs: [],\r\n        suggestedGigs: [],\r\n        favoriteGigs: [],\r\n        ordersAsBuyer: [],\r\n        ordersAsSeller: []\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadGigs() // TODO: CHANGE all waits to first go and then get all at the end....\r\n        await this.props.loadOrders()\r\n        const { user } = this.props\r\n        const ordersAsBuyer = this.props.orders.filter(order => order.buyer._id === user._id)\r\n        const ordersAsSeller = this.props.orders.filter(order => user.myGigIds?.some(gigId => gigId === order.gig._id))\r\n        console.log(ordersAsSeller)\r\n        const myGigs = user.myGigIds ? await getGigs(user.myGigIds) : []\r\n        const lastViewed = user.viewedGigIds ? await getGigs(user.viewedGigIds) : []\r\n        const favoriteGigs = user.favoriteIds ? await getGigs(user.favoriteIds) : []\r\n        this.setState(prevState =>\r\n        ({\r\n            ...prevState,\r\n            myGigs,\r\n            suggestedGigs: this.props.gigs.filter((gig, idx) => !(idx % 3)),\r\n            lastViewed,\r\n            favoriteGigs,\r\n            ordersAsBuyer,\r\n            ordersAsSeller\r\n        }))\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const value = target.innerText\r\n        this.setState(prevState => ({ ...prevState, fullname: value }))\r\n    }\r\n\r\n    onUploadImg = (ev) => {\r\n        this.props.onImageChange(ev)\r\n    }\r\n\r\n    onSave = (field, value) => {\r\n        const user = { ...this.props.user }\r\n        user[field] = value\r\n        this.props.updateUser(user)\r\n    }\r\n\r\n    onFavoriteToggle = (ev, gigId) => {\r\n        ev.stopPropagation()\r\n        const user = { ...this.props.user }\r\n        if (user.favoriteIds) {\r\n            if (user.favoriteIds.find(favoriteId => favoriteId === gigId)) user.favoriteIds = user.favoriteIds.filter(favoriteId => favoriteId !== gigId)\r\n            else user.favoriteIds.push(gigId)\r\n        } else user.favoriteIds = [gigId]\r\n        this.props.updateUser(user)\r\n    }\r\n\r\n    onRemoveViewed = (gigId) => {\r\n        const user = { ...this.props.user }\r\n        user.viewedGigIds = user.viewedGigIds.filter(viewedGigId => viewedGigId !== gigId)\r\n        this.props.updateUser(user)\r\n        const lastViewed = this.state.lastViewed.filter(gig => gig._id !== gigId)\r\n        this.setState({ lastViewed })\r\n    }\r\n\r\n    onOrderStatusChanged = (order) => {\r\n        order.status = order.status === 'pending' ? 'approved' : 'completed'\r\n        this.props.updateOrder(order)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { from, memberSince, lastViewed, suggestedGigs, favoriteGigs, myGigs, ordersAsBuyer, ordersAsSeller } = this.state\r\n        const { user } = this.props\r\n        console.log(user)\r\n        if (!user) return <div>Loading...</div>\r\n        return (\r\n            <section className=\"profile main-layout mrg-top\">\r\n                <div className=\"flex\">\r\n                    <div className=\"about-user flex column\">\r\n                        <label className=\"img-upload pointer\" htmlFor=\"uploadImg\">\r\n                            <img src={user.imgUrl} />\r\n                            <input onChange={this.onUploadImg} type=\"file\" id=\"uploadImg\" hidden />\r\n                            <PhotoCameraIcon className=\"camera-icon\" />\r\n                        </label>\r\n                        <EditableElement field={'fullname'} save={this.onSave} type={'h1'} text={user.fullname} />\r\n\r\n                        <p>From {from}</p>\r\n                        <p>Member since {memberSince}</p>\r\n                        <button>Send Message</button>\r\n                    </div>\r\n\r\n                </div>\r\n                <h1>Orders from me</h1>\r\n                <OrderList orders={ordersAsSeller} onOrderStatusChanged={this.onOrderStatusChanged} />\r\n                <h1>My Orders</h1>\r\n                <OrderList orders={ordersAsBuyer} />\r\n                <h1>My Gigs</h1>\r\n                <GigList gigs={myGigs} onDelete={this.onDelete} onUserViewGig={() => { }} onFavoriteToggle={this.onFavoriteToggle} user={user} />\r\n                {lastViewed.length !== 0 &&\r\n                    <div className=\"recently-viewed flex column\">\r\n                        <h1>Last viewed</h1>\r\n                        <GigList gigs={lastViewed} onDelete={this.onDelete} onUserViewGig={() => { }} onFavoriteToggle={this.onFavoriteToggle} user={user} removeViewed={this.onRemoveViewed} />\r\n                    </div>}\r\n                <h1>Favorites</h1>\r\n                <GigList gigs={favoriteGigs} onDelete={this.onDelete} onUserViewGig={() => { }} onFavoriteToggle={this.onFavoriteToggle} user={user} />\r\n                <h1>Suggested</h1>\r\n                <GigList gigs={suggestedGigs} onDelete={this.onDelete} onUserViewGig={() => { }} onFavoriteToggle={this.onFavoriteToggle} user={user} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapGlobalStateToProps = (state) => {\r\n    return {\r\n        user: state.userModule.user,\r\n        gigs: state.gigModule.gigs,\r\n        orders: state.orderModule.orders\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onImageChange,\r\n    updateUser,\r\n    loadGigs,\r\n    loadOrders,\r\n    updateOrder\r\n}\r\n\r\nexport const Profile = connect(mapGlobalStateToProps, mapDispatchToProps)(_Profile)\r\n\r\n\r\n","C:\\dev\\finalSprint\\sixerr\\src\\pages\\Login.jsx",["226"],"import { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { login, logout, addUser } from \"../store/actions/userActions.js\"\r\n\r\nclass _Login extends Component {\r\n\r\n    state = {\r\n        msg: '',\r\n        isSignUp: false,\r\n        loginCred: {\r\n            username: '',\r\n            password: ''\r\n        },\r\n        signupCred: {\r\n            username: '',\r\n            password: '',\r\n            fullname: ''\r\n        }\r\n    }\r\n\r\n    // componentDidMount () {\r\n\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        this.setState(\r\n            {\r\n                loginCred: { username: '', password: '' }\r\n            })\r\n    }\r\n\r\n    loginHandleChange = ev => {\r\n        const { name, value } = ev.target\r\n        this.setState(prevState => ({\r\n            loginCred: {\r\n                ...prevState.loginCred,\r\n                [name]: value\r\n            }\r\n        }))\r\n    }\r\n\r\n    signupHandleChange = ev => {\r\n        const { name, value } = ev.target\r\n        this.setState(prevState => ({\r\n            signupCred: {\r\n                ...prevState.signupCred,\r\n                [name]: value\r\n            }\r\n        }))\r\n    }\r\n\r\n    toggleIsNewUser = (ev) => {\r\n        ev.stopPropagation()\r\n        this.setState({ isSignUp: !this.state.isSignUp })\r\n    }\r\n\r\n    captureModalClick = (ev) => {\r\n        ev.stopPropagation()\r\n    }\r\n\r\n    doLogin = async ev => {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        const userCreds = this.state.loginCred\r\n        if (!userCreds.username || !userCreds.password) {\r\n            return this.setState({ loginCred: { username: '', password: '' }, msg: 'Please enter user/password' })\r\n        }\r\n        try {\r\n            await this.props.login(userCreds)\r\n            this.props.toggleLogin()\r\n\r\n        } catch (err) {\r\n            console.log('ERR', err)\r\n            this.setState(prevState => ({\r\n                loginCred: {\r\n                    ...prevState.loginCred,\r\n                    password: ''\r\n                },\r\n                msg: 'Wrong username or password'\r\n            }))\r\n        }\r\n    }\r\n\r\n    doLogout = () => {\r\n        this.props.logout()\r\n    }\r\n\r\n    doSignup = async ev => {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        const { username, password, fullname } = this.state.signupCred\r\n\r\n        if (!username || !password || !fullname) {\r\n            return this.setState({ msg: 'All inputs are required' })\r\n        }\r\n        try {\r\n            await this.props.addUser({ username, password, fullname })\r\n            this.props.toggleLogin()\r\n        }\r\n        catch (err) {\r\n            console.log('ERR', err)\r\n            this.setState(prevState => ({\r\n                signupCred: {\r\n                    ...prevState.signupCred,\r\n                    password: ''\r\n                },\r\n                msg: 'Could not sign up please try again'\r\n            }))\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const loggedInUser = this.props.user //TODO pay attention later \r\n        const { isSignUp, msg } = this.state\r\n\r\n        let signupSection = (\r\n            <>\r\n                <h1>Join Sixerr</h1>\r\n                <form className=\"frm\" onSubmit={this.doSignup}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"fullname\"\r\n                        value={this.state.signupCred.fullname}\r\n                        onChange={this.signupHandleChange}\r\n                        placeholder=\"Full name\"\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={this.state.signupCred.username}\r\n                        onChange={this.signupHandleChange}\r\n                        placeholder=\"Username\"\r\n                    />\r\n                    <input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={this.state.signupCred.password}\r\n                        onChange={this.signupHandleChange}\r\n                        placeholder=\"Password\"\r\n                    />\r\n                    <button>Continue</button>\r\n                    <hr />\r\n                    <h4>Already a member? <span onClick={this.toggleIsNewUser}>Sign In</span></h4>\r\n                </form>\r\n            </>\r\n        )\r\n        let loginSection = (\r\n            <>\r\n                <h1>Sign In to Sixerr</h1>\r\n                <form className=\"frm\" onSubmit={this.doLogin}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={this.state.loginCred.username}\r\n                        onChange={this.loginHandleChange}\r\n                        placeholder=\"Username\"\r\n                        autoFocus\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={this.state.loginCred.password}\r\n                        onChange={this.loginHandleChange}\r\n                        placeholder=\"Password\"\r\n                    />\r\n                    <br />\r\n                    <button className=\"rounded\">Continue</button>\r\n                    <hr />\r\n                    <h4>Not a member yet? <span onClick={this.toggleIsNewUser}>Join Now</span></h4>\r\n                </form>\r\n            </>\r\n        )\r\n\r\n\r\n        return (\r\n            <div className=\"main-screen\" onClick={this.props.toggleLogin}>\r\n                <div className=\"login main-layout shadow rounded\" onClick={this.captureModalClick}>\r\n                    {msg && <p>{msg}</p>}\r\n                    {/* {loggedInUser && (\r\n                        <div>\r\n                            <h3>\r\n                                Welcome {loggedInUser.fullname}\r\n                                <button onClick={this.doLogout}>Logout</button>\r\n                            </h3>\r\n                        </div>\r\n                    )} */}\r\n                    {isSignUp && signupSection}\r\n                    {!isSignUp && loginSection}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    logout,\r\n    addUser,\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)\r\n\r\n\r\n\r\n\r\n","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigAddReview.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\PackageList.jsx",[],["227","228"],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SideBar.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ReviewList.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\EditableElement.jsx",["229"],"import React from 'react'\r\nimport ContentEditable from 'react-contenteditable'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nexport class EditableElement extends React.Component {\r\n    state = {\r\n        editable: false,\r\n        html: this.props.text\r\n    }\r\n    contentEditable = React.createRef();\r\n\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n    }\r\n\r\n    handleChange = evt => {\r\n        this.setState({ ...this.state, html: evt.target.value });\r\n    };\r\n\r\n    toggleEditable = () => {\r\n        this.setState({\r\n            ...this.state, editable: !this.state.editable\r\n        },\r\n            () => {\r\n                if (this.state.editable) this.contentEditable.current.focus()\r\n            })\r\n    }\r\n\r\n    onStartEdit = () => {\r\n        this.toggleEditable()\r\n    }\r\n\r\n    onSaveElement = () => {\r\n        this.props.save(this.props.field, this.contentEditable.current.innerText)\r\n        this.toggleEditable()\r\n    }\r\n\r\n    render = () => {\r\n        const { editable } = this.state\r\n        const editableStyle = (editable) ? { border: '1px solid #888' } : {}\r\n        return (\r\n            <div className=\"content-edit-wrapper flex space-around align-center\">\r\n                <ContentEditable\r\n                    innerRef={this.contentEditable}\r\n                    html={this.state.html} // innerHTML of the editable div\r\n                    disabled={!this.state.editable}       // use true to disable editing\r\n                    onChange={this.handleChange} // handle innerHTML change\r\n                    tagName={this.props.type} // Use a custom HTML tag (uses a div by default)\r\n                    className=\"content-editable\"\r\n                    style={editableStyle}\r\n                />\r\n                <div className=\"action-buttons\">\r\n                    {!editable && <EditIcon className=\"action-button\" onClick={this.onStartEdit} />}\r\n                    {editable && <DoneIcon className=\"action-button\" onClick={this.onSaveElement} />}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction EditButton(props) {\r\n    return (\r\n        <button\r\n            key={props.cmd}\r\n            onMouseDown={evt => {\r\n                evt.preventDefault(); // Avoids loosing focus from the editable area\r\n                document.execCommand(props.cmd, false, props.arg); // Send the command to the browser\r\n            }}\r\n        >\r\n            {props.name || props.cmd}\r\n        </button>\r\n    );\r\n}","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ReviewStats.jsx",["230"],"import StarRateIcon from '@material-ui/icons/StarRate';\r\n\r\n\r\nexport function ReviewStats({ htmlStars }) {\r\n    //calculate real stats later!!\r\n    return (\r\n        <>\r\n            <div className=\"review-stats-header flex\">\r\n                <h2>7,738 Reviews</h2>\r\n                {htmlStars.map((star) => {\r\n                    return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1792 1792\" width=\"15\" height=\"15\"><path fill=\"currentColor\" d=\"M1728 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 21-10.5 35.5t-30.5 14.5q-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z\"></path></svg>\r\n                })}\r\n                <span>{htmlStars.length}</span>\r\n            </div>\r\n            <section className=\"review-stats-container \" >\r\n                <div className=\"left-side-stats\">\r\n                    <div className=\"progressses-ctonainer\">\r\n                        <span>5 stars</span>\r\n                        <div className=\"progress-bar-container\">\r\n                            <div className=\"fit-progressbar-background\" style={{ backgroundColor: 'orange', width: `${90}%` }} >\r\n                            </div>\r\n                        </div>\r\n                        <p>(500)</p>\r\n                    </div>\r\n                    <div className=\"progressses-ctonainer\">\r\n                        <span>4 stars</span>\r\n                        <div className=\"progress-bar-container\">\r\n                            <div className=\"fit-progressbar-background\" style={{ backgroundColor: 'orange', width: `${100}%` }} >\r\n                            </div>\r\n                        </div>\r\n                        <p>(400)</p>\r\n                    </div>\r\n                    <div className=\"progressses-ctonainer\">\r\n                        <span>3 stars</span>\r\n                        <div className=\"progress-bar-container\">\r\n                            <div className=\"fit-progressbar-background\" style={{ backgroundColor: 'orange', width: `${95}%` }} >\r\n                            </div>\r\n                        </div>\r\n                        <p>(300)</p>\r\n                    </div>\r\n                    <div className=\"progressses-ctonainer\">\r\n                        <span>2 stars</span>\r\n                        <div className=\"progress-bar-container\">\r\n                            <div className=\"fit-progressbar-background\" style={{ backgroundColor: 'orange', width: `${90}%` }} >\r\n                            </div>\r\n                        </div>\r\n                        <p>(200)</p>\r\n                    </div>\r\n                    <div className=\"progressses-ctonainer\">\r\n                        <span>1 stars</span>\r\n                        <div className=\"progress-bar-container\">\r\n                            <div className=\"fit-progressbar-background\" style={{ backgroundColor: 'orange', width: `${96}%` }} >\r\n                            </div>\r\n                        </div>\r\n                        <p>(100)</p>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"x\"> */}\r\n                <div className=\"right-side-stats\">\r\n                    <div>\r\n                        <h6>Rating Breakdown</h6>\r\n                    </div>\r\n                    <div className=\"overview-content\">\r\n                        <span>Seller communication level</span>\r\n                    </div>\r\n                    <div className=\"overview-content\">\r\n                        <span>Recommend to a friend</span>\r\n                    </div  >\r\n                    <div className=\" overview-content flex space-between\">\r\n                        <span>Service as described</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"stars flex column\">\r\n                    <div>\r\n                        <span>5</span>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1792 1792\" width=\"15\" height=\"15\"><path fill=\"currentColor\" d=\"M1728 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 21-10.5 35.5t-30.5 14.5q-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z\"></path></svg>\r\n                    </div>\r\n                    <div>\r\n                        <span>4</span>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1792 1792\" width=\"15\" height=\"15\"><path fill=\"currentColor\" d=\"M1728 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 21-10.5 35.5t-30.5 14.5q-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z\"></path></svg>\r\n                    </div>\r\n                    <div >\r\n                        <span >3</span>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1792 1792\" width=\"15\" height=\"15\"><path fill=\"currentColor\" d=\"M1728 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 21-10.5 35.5t-30.5 14.5q-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z\"></path></svg>\r\n                    </div>\r\n                </div>\r\n                {/* </div> */}\r\n            </section>\r\n\r\n        </>\r\n    )\r\n}","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ShortReviewList.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\Carousel.jsx",["231"],"import React from 'react';\r\nimport Carousel from 'react-material-ui-carousel'\r\n\r\nexport class CarouselImgs extends React.Component {\r\n    state = {\r\n        items:null,\r\n        itemsLength:0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const itemsLength = this.props.imgUrls.length\r\n        const itemsArr = this.createItems(itemsLength)\r\n        this.setState({items:itemsArr,itemsLength})\r\n    }\r\n\r\n    createItems = (length) =>{\r\n        if(length<=0) return null\r\n        const items = []\r\n        for (var i =0 ; i<length; i++){\r\n            items.push( {\r\n                idx:i,\r\n            },)\r\n        }\r\n        return items\r\n    }   \r\n    \r\n    Item = (i) => {\r\n        const imgs = this.props.imgUrls\r\n        const img= <img src={`${imgs[i.item.idx]}`} />\r\n        console.log(\"img1\", img)\r\n        return (\r\n            img\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {items} = this.state\r\n        console.log(\"render , items\", items)\r\n        if(!items || !items.length) return <div></div>\r\n        return (\r\n            <Carousel>\r\n                {\r\n                    items.map((item, i) => <this.Item key={i} item={item} />)\r\n                }\r\n            </Carousel>\r\n        )\r\n    }\r\n}\r\n","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ImgGallery.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\actions\\userActions.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\services\\gigService.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigList.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\actions\\gigActions.js",["232"],"import { gigService } from \"../../services/gigService.js\";\r\nimport { cloudinaryService } from \"../../services/cloudinaryService.js\";\r\n\r\nexport function loadGigs() {\r\n    return async (dispatch, getState) => {\r\n        const { filterBy } = getState().gigModule\r\n        const gigs = await gigService.query(filterBy)\r\n        const action = {\r\n            type: 'SET_GIGS',\r\n            gigs\r\n        }\r\n        dispatch(action)\r\n    }\r\n}\r\n\r\nexport function loadGig(gigId) {\r\n    return gigService.getById(gigId)\r\n}\r\nexport async function getGigs(gigIds) {\r\n    const prmGigs = gigIds.map(gigId => loadGig(gigId))\r\n    const gigs = await Promise.all(prmGigs)\r\n    return gigs\r\n}\r\n\r\nexport function removeGig(gigId) {\r\n    return async (dispatch) => {\r\n        await gigService.deleteGig(gigId)\r\n        const action = {\r\n            type: 'REMOVE_GIG',\r\n            gigId\r\n        }\r\n        dispatch(action)\r\n\r\n    }\r\n}\r\n\r\nexport function addGig(gig) {\r\n    console.log(\"addGig , gig\", gig)\r\n    return async (dispatch) => {\r\n        const savedGig = await gigService.save(gig)\r\n        const action = {\r\n            type: 'ADD_GIG',\r\n            savedGig\r\n        }\r\n        dispatch(action)\r\n\r\n    }\r\n}\r\nexport function updateGig(gig) {\r\n    return async (dispatch) => {\r\n        const savedGig = await gigService.save(gig)\r\n        const action = {\r\n            type: 'SAVE_GIG',\r\n            savedGig\r\n        }\r\n        dispatch(action)\r\n\r\n    }\r\n}\r\n\r\nexport function setFilter(filterBy) {\r\n    return (dispatch) => {\r\n        const action = {\r\n            type: 'FILTER_GIGS',\r\n            filterBy\r\n        }\r\n        dispatch(action)\r\n    }\r\n}","C:\\dev\\finalSprint\\sixerr\\src\\services\\utilService.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ReviewPreview.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\services\\userService.js",["233"],"// import { storageService } from './asyncStorageService'\r\nimport { httpService } from './httpService'\r\nconst SCORE_FOR_REVIEW = 10\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser,\r\n}\r\n\r\nwindow.userService = userService\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    // return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    console.log('Service', user.favoriteIds )\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n    return user\r\n}\r\n\r\nasync function login(userCred) {\r\n    const users = await httpService.get('user')\r\n    const user = users.find(user => user.username === userCred.username && user.password === userCred.password)\r\n    if (user) {\r\n        console.log('Found user')\r\n        return _saveLocalUser(user)\r\n    }\r\n    else throw new Error('no user')\r\n    // const user = await httpService.post('auth/login', userCred)\r\n    // if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    const user = await httpService.post('user', userCred)\r\n    // const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return\r\n    // return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\n","C:\\dev\\finalSprint\\sixerr\\src\\services\\cloudinaryService.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\HoverRating.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SellerPreview.jsx",["234","235","236","237"],"import Avatar from '@material-ui/core/Avatar';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\n\r\n\r\nexport function SellerPreview({ seller }) {\r\n    return (\r\n        <>\r\n            <section id=\"about-seller\" className=\"about-seller-container flex column\">\r\n                <h2>About The Seller</h2>\r\n                <div className=\"content flex\">\r\n                    <div className=\"seller-img-container\">\r\n                        <img src={seller.imgUrl} />\r\n                        {/* <Avatar src={`${seller.imgUrl}`} /> */}\r\n                    </div>\r\n                    <div className=\"content flex column\">\r\n                        <a>{seller.fullname}</a>\r\n                        <span>Creator of AR filters</span>\r\n                        <div className=\"stars-container flex justify-center align center\">\r\n                            {/*todo: add real stars from data later */}\r\n                            {/* <Rating name=\"disabled\" value={5} disabled /> */}\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1792 1792\" width=\"15\" height=\"15\"><path fill=\"currentColor\" d=\"M1728 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 21-10.5 35.5t-30.5 14.5q-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z\"></path></svg>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1792 1792\" width=\"15\" height=\"15\"><path fill=\"currentColor\" d=\"M1728 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 21-10.5 35.5t-30.5 14.5q-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z\"></path></svg>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1792 1792\" width=\"15\" height=\"15\"><path fill=\"currentColor\" d=\"M1728 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 21-10.5 35.5t-30.5 14.5q-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z\"></path></svg>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1792 1792\" width=\"15\" height=\"15\"><path fill=\"currentColor\" d=\"M1728 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 21-10.5 35.5t-30.5 14.5q-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z\"></path></svg>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1792 1792\" width=\"15\" height=\"15\"><path fill=\"currentColor\" d=\"M1728 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 21-10.5 35.5t-30.5 14.5q-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z\"></path></svg>\r\n                            <span>5.0 (40 reviews)</span>\r\n                        </div>\r\n                            <button>Contact Me</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"seller-stats flex column\">\r\n                <div className=\"user-stats flex\">\r\n                    <div className=\"flex column\">\r\n                        <span>From</span>\r\n                        <span className=\"bold\">United States</span>\r\n                        <span>Avg. response time</span>\r\n                        <span className=\"bold\">3 hours</span>\r\n                    </div>\r\n                    <div className=\"flex column\">\r\n                        <span >Member since</span>\r\n                        <span className=\"bold\">Aug 2020</span>\r\n                        <span>Last deilivery</span>\r\n                        <span className=\"bold\">About 12 hours</span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Error, nihil. Temporibus quidem aperiam voluptates aliquid nostrum, ratione laboriosam commodi culpa eligendi? Autem cum corporis quia asperiores deleniti maiores consequuntur expedita?</p>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\SellerOverview.jsx",["238"],"import Avatar from '@material-ui/core/Avatar';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nexport function SellerOverview({ gig, htmlStars }) {\r\n    return (\r\n        <section className=\"seller-overview flex\">\r\n            <Avatar className=\"avatar\" alt=\"Remy Sharp\" src=\"https://avataaars.io/?avatarStyle=Circle&topType=LongHairStraight&accessoriesType=Blank&hairColor=BrownDark&facialHairType=Blank&clotheType=BlazerShirt&eyeType=Default&eyebrowType=Default&mouthType=Default&skinColor=Light\" />\r\n            <div className=\"flex align-center info\">\r\n                <span className=\"owner-fullname\">{gig.owner.fullname}</span>\r\n                <span>Level 2 Seller </span>\r\n                <span className=\"space\">|</span>\r\n            </div>\r\n            <div className=\"seller-stars-container flex\">\r\n                {/* <Rating name=\"disabled\" value={htmlStars.length - 1} disabled /> */}\r\n                {htmlStars.map((star) => {\r\n                    return  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1792 1792\" width=\"15\" height=\"15\"><path fill=\"currentColor\" d=\"M1728 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 21-10.5 35.5t-30.5 14.5q-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z\"></path></svg>\r\n                })}\r\n                <span>{(htmlStars.length - 1 === -1) ? 0 : htmlStars.length - 1}</span>\r\n            </div>\r\n            <span>({gig.reviews.length})</span>\r\n            <span>|</span>\r\n            {/* get orders from gig */}\r\n            <span className=\"order-count\">1 Orders in Queue</span>\r\n        </section>\r\n    )\r\n\r\n}\r\n","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigImgLightBox.jsx",["239"],"import React from 'react'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\n// import { CarouselImgs } from '../cmps/Carousel.jsx'\r\n\r\nexport function GigImgLightBox({ currImg, onToggleImgLightbox, onNextPageLightBox, onPrevPageLightBox, gig }) {\r\n    return (\r\n        <section className=\"img-light-box\" onClick={() => onToggleImgLightbox()}>\r\n            <div>\r\n                <img src={currImg} />\r\n                {/* <CarouselImgs imgUrls={gig.imgUrls} /> */}\r\n                <CloseIcon className=\"close-light-box\" onClick={() => onToggleImgLightbox()} />\r\n                <SkipNextIcon className=\"next-img\" onClick={(ev) => onNextPageLightBox(ev)} />\r\n                <SkipPreviousIcon className=\"prev-img\" onClick={(ev) => onPrevPageLightBox(ev)} />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","C:\\dev\\finalSprint\\sixerr\\src\\services\\httpService.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\PackagePreview.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\ShortReviewPreview.jsx",["240"],"import Avatar from '@material-ui/core/Avatar';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport {\r\n    IconFlagUS,\r\n}\r\n    from 'material-ui-flags';\r\n\r\nexport function ShortReviewPreview({ reviews, idx }) {\r\n    if (!reviews[idx].by) return <div></div>\r\n    return (\r\n        <>\r\n            <div className=\"short-content\">\r\n                <div className=\"content-wrapper flex\">\r\n                    <div className=\"avatar-container\">\r\n                        <Avatar src={reviews[idx].by.imgUrl} />\r\n                    </div>\r\n                    <div className=\"content flex align-center\">\r\n                        <h6>{reviews[idx].by.fullname}</h6>\r\n                        <IconFlagUS className=\"country-icon\" />\r\n                        <span className=\"country-name\">united states</span>\r\n                        <svg className=\"star-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1792 1792\" width=\"15\" height=\"15\"><path fill=\"currentColor\" d=\"M1728 647q0 22-26 48l-363 354 86 500q1 7 1 20 0 21-10.5 35.5t-30.5 14.5q-19 0-40-12l-449-236-449 236q-22 12-40 12-21 0-31.5-14.5t-10.5-35.5q0-6 2-20l86-500-364-354q-25-27-25-48 0-37 56-46l502-73 225-455q19-41 49-41t49 41l225 455 502 73q56 9 56 46z\"></path></svg>\r\n                        <span className=\"rating\">{reviews[idx].rating}</span>\r\n                    </div>\r\n                </div>\r\n                <p >{reviews[idx].txt}</p>\r\n                {/* <p className=\"cut-text text-with-dots \">{reviews[idx].txt}</p> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n//remove padding from short-content\r\n//div flex  =>     padding-inline-start: 30px;  padding-block-start: 18px;\r\n// p => margin-block-end:0; ,     padding-inline-start: 86.5px; ,padding-block-end: 4px;\r\n\r\n    ","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigPreview.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\DetailsNav.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\WindowSize.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\reducers\\orderReducer.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\GigStrip.jsx",["241"],"import React from 'react'\r\n\r\nimport { GigPreview } from \"./GigPreview\"\r\n\r\nexport class GigStrip extends React.Component {\r\n\r\n    state = {\r\n        // gigs: [],\r\n        posX: 0,\r\n        clientWidth: 0\r\n    }\r\n\r\n    elCard = React.createRef()\r\n    \r\n    componentDidMount() {\r\n        const { clientWidth } = document.body\r\n        this.setState({\r\n            posX: 0,\r\n            clientWidth,\r\n        })\r\n        \r\n        // console.log('computed style', window.getComputedStyle(this.elCard.current));\r\n    }\r\n    \r\n    scrollRight = () => {\r\n        console.log(this.elCard)\r\n        const newPosX = this.state.posX - this.state.clientWidth\r\n        this.setState({ ...this.state, posX: newPosX })\r\n    }\r\n\r\n    scrollLeft = () => {\r\n        const newPosX = this.state.posX + this.state.clientWidth\r\n        this.setState({ ...this.state, posX: newPosX })\r\n    }\r\n\r\n    render() {\r\n        const { gigs, posX } = this.state\r\n        const inlineStyle = { transform: `translateX(${posX}px)` }\r\n        return (\r\n            <section className=\"gig-strip\">\r\n                <button onClick={this.scrollLeft}>LEFT</button>\r\n                <button onClick={this.scrollRight}>RIGHT</button>\r\n                <ul className=\"strip-wrap clean-list\" style={inlineStyle}>\r\n                    {this.props.gigs.map(gig =>\r\n                        <GigPreview key={gig._id}\r\n                            gig={gig}\r\n                            onUserViewGig={this.props.onUserViewGig}\r\n                            onFavoriteToggle={this.props.onFavoriteToggle}\r\n                            user={this.props.user}\r\n                            />\r\n                    )}\r\n                </ul>\r\n            </section>\r\n        )\r\n    }\r\n}","C:\\dev\\finalSprint\\sixerr\\src\\cmps\\OrderList.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\store\\actions\\orderActions.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\services\\orderService.js",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\OrderPreview.jsx",[],"C:\\dev\\finalSprint\\sixerr\\src\\cmps\\RichTextEditor.jsx",["242"],"\r\nimport React from 'react'\r\nimport { convertToRaw, Editor, EditorState, getDefaultKeyBinding, RichUtils } from 'draft-js'\r\nimport '../../node_modules/draft-js/dist/Draft.css'\r\nimport draftToHtml from \"draftjs-to-html\";\r\n\r\n// \r\nclass RichTextEditor extends React.Component {\r\n    state = {\r\n        innerHtml: '',\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { editorState: EditorState.createEmpty() };\r\n\r\n        this.focus = () => this.refs.editor.focus();\r\n        this.onChange = (editorState) => this.setState({ editorState });\r\n\r\n        this.handleKeyCommand = this._handleKeyCommand.bind(this);\r\n        this.mapKeyToEditorCommand = this._mapKeyToEditorCommand.bind(this);\r\n        this.toggleBlockType = this._toggleBlockType.bind(this);\r\n        this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        // if(!this.props.desc) this.state = { editorState: EditorState.createEmpty() };\r\n        // console.log('this.props.desc!!!', this.props.desc);\r\n        // console.log('propss!!!!!!', this.props.desc);\r\n        // const { editorState } = this.state\r\n        // if (editorState) this.onSetHtml(draftToHtml(convertToRaw(editorState.getCurrentContent())))\r\n        this.setState({ innerHtml: this.props.desc })\r\n    }\r\n\r\n\r\n    _handleKeyCommand(command, editorState) {\r\n        const newState = RichUtils.handleKeyCommand(editorState, command);\r\n        if (newState) {\r\n            this.onChange(newState);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _mapKeyToEditorCommand(e) {\r\n        if (e.keyCode === 9 /* TAB */) {\r\n            const newEditorState = RichUtils.onTab(\r\n                e,\r\n                this.state.editorState,\r\n                4, /* maxDepth */\r\n            );\r\n            if (newEditorState !== this.state.editorState) {\r\n                this.onChange(newEditorState);\r\n            }\r\n            return;\r\n        }\r\n        return getDefaultKeyBinding(e);\r\n    }\r\n\r\n    _toggleBlockType(blockType) {\r\n        this.onChange(\r\n            RichUtils.toggleBlockType(\r\n                this.state.editorState,\r\n                blockType\r\n            )\r\n        );\r\n    }\r\n\r\n    _toggleInlineStyle(inlineStyle) {\r\n        this.onChange(\r\n            RichUtils.toggleInlineStyle(\r\n                this.state.editorState,\r\n                inlineStyle\r\n            )\r\n        );\r\n    }\r\n\r\n    onSetHtml = (newHtml) => {\r\n        this.setState({ innerHtml: newHtml })\r\n    }\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        console.log(\"field\", field)\r\n        let value = target.value\r\n        console.log(\"value\", value)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const desc = this.props.desc\r\n        // if(document.querySelector('.RichEditor-root')) document.querySelector('.RichEditor-root').innerHTML=`${desc}`\r\n        if (document.querySelector('.data-text')) {\r\n            let span = document.querySelector('.data-text')\r\n            console.log(\"document.querySelector('.data-text')!!!\", document.querySelector('.data-text'))\r\n            span.innerHtml = `5`\r\n        }\r\n        // if (document.querySelector('.RichEditor-root')) document.querySelector('.RichEditor-root').innerHTML = `${desc}`\r\n        // if (document.querySelector('.RichEditor-editor')) document.querySelector('.RichEditor-editor').innerHTML = `${desc}`\r\n        // if (document.querySelector('.public-DraftStyleDefault-block public-DraftStyleDefault-ltr span')) document.querySelector('.public-DraftStyleDefault-block public-DraftStyleDefault-ltr span').innerHTML = `${desc}`\r\n\r\n\r\n        console.log(\"render , desc\", desc)\r\n        if (this.state.innerHtml) console.log(\"innerHtml\", this.state.innerHtml)\r\n        const { editorState } = this.state;\r\n        console.log(\"render , editorState\", editorState)\r\n        let className = 'RichEditor-editor';\r\n        var contentState = editorState.getCurrentContent();\r\n        if (!contentState.hasText()) {\r\n            if (contentState.getBlockMap().first().getType() !== 'unstyled') {\r\n                className += ' RichEditor-hidePlaceholder';\r\n            }\r\n        }\r\n\r\n        // blockRendererFn?: (block: ContentBlock) => ?Object\r\n        return (\r\n            <div className=\"RichEditor-root main-layout\">\r\n                <BlockStyleControls\r\n                    editorState={editorState}\r\n                    onToggle={this.toggleBlockType}\r\n                />\r\n                <InlineStyleControls\r\n                    editorState={editorState}\r\n                    onToggle={this.toggleInlineStyle}\r\n                />\r\n                {/* <div dangerouslySetInnerHTML={{__html:`${desc}`}}>\r\n\r\n                </div> */}\r\n                <div className={className} onClick={this.focus}   >\r\n                    <Editor\r\n                        blockStyleFn={getBlockStyle}\r\n                        customStyleMap={desc}\r\n                        editorState={editorState}\r\n                        handleKeyCommand={this.handleKeyCommand}\r\n                        keyBindingFn={this.mapKeyToEditorCommand}\r\n                        onChange={this.onChange}\r\n                        placeholder={this.state.innerHtml}\r\n                        ref=\"editor\"\r\n                        spellCheck={true}\r\n                        textDirectionality={desc}\r\n                        editable={false}\r\n                    />\r\n                    <button onClick={() => this.props.onSaveHtml(draftToHtml(convertToRaw(editorState.getCurrentContent())))}>Save</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Custom overrides for \"code\" style.\r\nconst styleMap = {\r\n    CODE: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\r\n        fontSize: 16,\r\n        padding: 2,\r\n    },\r\n};\r\n\r\nfunction getBlockStyle(block) {\r\n    switch (block.getType()) {\r\n        case 'blockquote': return 'RichEditor-blockquote';\r\n        default: return null;\r\n    }\r\n}\r\n\r\nclass StyleButton extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.onToggle = (e) => {\r\n            e.preventDefault();\r\n            this.props.onToggle(this.props.style);\r\n        };\r\n    }\r\n\r\n    render() {\r\n        let className = 'RichEditor-styleButton';\r\n        if (this.props.active) {\r\n            className += ' RichEditor-activeButton';\r\n        }\r\n\r\n        return (\r\n            <span className={className} onMouseDown={this.onToggle}>\r\n                {this.props.label}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst BLOCK_TYPES = [\r\n    { label: 'H1', style: 'header-one' },\r\n    { label: 'H2', style: 'header-two' },\r\n    { label: 'H3', style: 'header-three' },\r\n    { label: 'H4', style: 'header-four' },\r\n    { label: 'H5', style: 'header-five' },\r\n    { label: 'H6', style: 'header-six' },\r\n    { label: 'Blockquote', style: 'blockquote' },\r\n    { label: 'UL', style: 'unordered-list-item' },\r\n    { label: 'OL', style: 'ordered-list-item' },\r\n    { label: 'Code Block', style: 'code-block' },\r\n];\r\n\r\nconst BlockStyleControls = (props) => {\r\n    const { editorState } = props;\r\n    const selection = editorState.getSelection();\r\n    const blockType = editorState\r\n        .getCurrentContent()\r\n        .getBlockForKey(selection.getStartKey())\r\n        .getType();\r\n\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            {BLOCK_TYPES.map((type) =>\r\n                <StyleButton\r\n                    key={type.label}\r\n                    active={type.style === blockType}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nvar INLINE_STYLES = [\r\n    { label: 'Bold', style: 'BOLD' },\r\n    { label: 'Italic', style: 'ITALIC' },\r\n    { label: 'Underline', style: 'UNDERLINE' },\r\n    { label: 'Monospace', style: 'CODE' },\r\n];\r\n\r\nconst InlineStyleControls = (props) => {\r\n    const currentStyle = props.editorState.getCurrentInlineStyle();\r\n    console.log(\"InlineStyleControls , currentStyle\", currentStyle)\r\n\r\n    return (\r\n        <div className=\"RichEditor-controls\">\r\n            {INLINE_STYLES.map((type) =>\r\n                <StyleButton\r\n                    key={type.label}\r\n                    active={currentStyle.has(type.style)}\r\n                    label={type.label}\r\n                    onToggle={props.onToggle}\r\n                    style={type.style}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// class MyEditor extends React.Component {\r\n//     // ...\r\n//     _onBoldClick() {\r\n//       this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'));\r\n//     }\r\n\r\n//     render() {\r\n//       return (\r\n//         <div>\r\n//           <button onClick={this._onBoldClick.bind(this)}>Bold</button>\r\n//           <Editor\r\n//             editorState={this.state.editorState}\r\n//             handleKeyCommand={this.handleKeyCommand}\r\n//             onChange={this.onChange}\r\n//           />\r\n//         </div>\r\n//       );\r\n//     }\r\n//   }\r\n\r\n\r\nexport default RichTextEditor;",{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":14},{"ruleId":"247","severity":1,"message":"251","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":15},{"ruleId":"247","severity":1,"message":"252","line":7,"column":10,"nodeType":"249","messageId":"250","endLine":7,"endColumn":18},{"ruleId":"247","severity":1,"message":"253","line":21,"column":8,"nodeType":"249","messageId":"250","endLine":21,"endColumn":22},{"ruleId":"247","severity":1,"message":"254","line":22,"column":10,"nodeType":"249","messageId":"250","endLine":22,"endColumn":17},{"ruleId":"255","severity":1,"message":"256","line":214,"column":33,"nodeType":"257","endLine":214,"endColumn":37},{"ruleId":"258","severity":1,"message":"259","line":196,"column":67,"nodeType":"260","messageId":"261","endLine":196,"endColumn":69},{"ruleId":"262","severity":1,"message":"263","line":98,"column":29,"nodeType":"257","endLine":98,"endColumn":54},{"ruleId":"247","severity":1,"message":"264","line":115,"column":15,"nodeType":"249","messageId":"250","endLine":115,"endColumn":27},{"ruleId":"243","replacedBy":"265"},{"ruleId":"245","replacedBy":"266"},{"ruleId":"247","severity":1,"message":"267","line":62,"column":10,"nodeType":"249","messageId":"250","endLine":62,"endColumn":20},{"ruleId":"247","severity":1,"message":"268","line":1,"column":8,"nodeType":"249","messageId":"250","endLine":1,"endColumn":20},{"ruleId":"262","severity":1,"message":"263","line":29,"column":20,"nodeType":"257","endLine":29,"endColumn":55},{"ruleId":"247","severity":1,"message":"269","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":27},{"ruleId":"247","severity":1,"message":"270","line":3,"column":7,"nodeType":"249","messageId":"250","endLine":3,"endColumn":23},{"ruleId":"247","severity":1,"message":"271","line":1,"column":8,"nodeType":"249","messageId":"250","endLine":1,"endColumn":14},{"ruleId":"247","severity":1,"message":"272","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":14},{"ruleId":"262","severity":1,"message":"263","line":13,"column":25,"nodeType":"257","endLine":13,"endColumn":52},{"ruleId":"273","severity":1,"message":"274","line":17,"column":25,"nodeType":"257","endLine":17,"endColumn":28},{"ruleId":"247","severity":1,"message":"272","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":14},{"ruleId":"262","severity":1,"message":"263","line":11,"column":17,"nodeType":"257","endLine":11,"endColumn":38},{"ruleId":"247","severity":1,"message":"268","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":20},{"ruleId":"247","severity":1,"message":"275","line":37,"column":17,"nodeType":"249","messageId":"250","endLine":37,"endColumn":21},{"ruleId":"247","severity":1,"message":"276","line":149,"column":7,"nodeType":"249","messageId":"250","endLine":149,"endColumn":15},"no-native-reassign",["277"],"no-negated-in-lhs",["278"],"no-unused-vars","'Hero' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'GigStrip' is defined but never used.","'RichTextEditor' is defined but never used.","'GigList' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'loggedInUser' is assigned a value but never used.",["277"],["278"],"'EditButton' is defined but never used.","'StarRateIcon' is defined but never used.","'cloudinaryService' is defined but never used.","'SCORE_FOR_REVIEW' is assigned a value but never used.","'Avatar' is defined but never used.","'Rating' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'gigs' is assigned a value but never used.","'styleMap' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]